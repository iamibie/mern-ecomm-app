{"version":3,"sources":["Components/Header.js","Components/Rating.js","constants/productConstants.js","actions/productActions.js","loader.js","message.js","screens/Productscreen.js","constants/cartConstants.js","actions/cartActions.js","screens/cartScreen.js","Components/FormContainer.js","constants/userConstants.js","actions/userActions.js","screens/loginScreen.js","screens/RegisterScreen.js","constants/orderConstants.js","screens/ProfileScreen.js","actions/orderActions.js","Components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","Components/Navbar.js","screens/OrderDetailsScreen.js","screens/UserListScreen.js","screens/AdminUpdateUserScreen.js","Components/Product.js","screens/ProductListScreen.js","screens/AdminUpdateProductScreen.js","screens/OrderListScreen.js","Components/Footer.js","screens/Homescreen.js","screens/MainScreen.js","App.js","reportWebVitals.js","reducers/cartReducers.js","store.js","reducers/productReducers.js","reducers/userReducers.js","reducers/ordersReducers.js","index.js"],"names":["Header","className","src","alt","to","Button","type","variant","Rating","value","text","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","ADMIN_PRODUCT_LIST_REQUEST","ADMIN_PRODUCT_LIST_SUCCESS","ADMIN_PRODUCT_LIST_FAIL","ADMIN_UPDATE_PRODUCT_REQUEST","ADMIN_UPDATE_PRODUCT_SUCCESS","ADMIN_UPDATE_PRODUCT_FAIL","ADMIN_UPDATE_PRODUCT_RESET","ADMIN_CREATE_PRODUCT_REQUEST","ADMIN_CREATE_PRODUCT_SUCCESS","ADMIN_CREATE_PRODUCT_FAIL","ADMIN_DELETE_PRODUCT_REQUEST","ADMIN_DELETE_PRODUCT_SUCCESS","ADMIN_DELETE_PRODUCT_FAIL","listProductDetails","id","dispatch","a","axios","get","data","payload","response","message","Loader","Spinner","animation","role","style","width","height","margin","display","class","Message","children","Alert","defaultProps","Productscreen","history","match","useState","qty","setQty","useDispatch","productDetails","useSelector","state","loading","error","product","useEffect","params","Container","Row","Col","md","Image","image","name","fluid","ListGroup","Item","rating","numReviews","price","description","Card","countInStock","Form","Control","as","onChange","e","target","Array","keys","map","x","disabled","onClick","push","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","getState","_id","localStorage","setItem","JSON","stringify","cart","cartItems","CartScreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","item","rounded","reduce","acc","toFixed","FormContainer","xs","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAIL_REQUEST","USER_DETAIL_SUCCESS","USER_DETAIL_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_PROFILE_REQUEST","USER_LIST_PROFILE_SUCCESS","USER_LIST_PROFILE_FAIL","USER_LIST_PROFILE_RESET","USER_REMOVE_PROFILE_REQUEST","USER_REMOVE_PROFILE_SUCCESS","USER_REMOVE_PROFILE_FAIL","USER_GET_PROFILE_REQUEST","USER_GET_PROFILE_SUCCESS","USER_GET_PROFILE_FAIL","UPDATE_USER_PROFILE_REQUEST","UPDATE_USER_PROFILE_SUCCESS","UPDATE_USER_PROFILE_FAIL","UPDATE_USER_PROFILE_RESET","logout","removeItem","getUserDetail","userInfo","userLogin","config","headers","Authorization","token","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","post","login","Group","controlId","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDERS_GET_REQUEST","ORDERS_GET_SUCCESS","ORDERS_GET_FAIL","ADMIN_ORDERS_GET_REQUEST","ADMIN_ORDERS_GET_SUCCESS","ADMIN_ORDERS_GET_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","ProfileScreen","userDetail","user","success","userUpdateProfile","userOrders","orders","put","updateUserProfile","CheckoutSteps","step1","step2","step3","step4","Nav","Link","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrserScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","totalPrice","orderCreate","order","index","createOrder","orderItems","Navbar","props","totalItems","Navtop","textDecoration","NavDropdown","title","isAdmin","NavBottom","OrderDetailsScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","isPaid","window","paypal","href","isDelivered","deliveredAt","paidAt","amount","onSuccess","paymentResult","updateToPaid","updateOrderToDelivered","UserListScreen","userList","users","successDelete","userDelete","pushState","deleteHandler","confirm","delete","deleteUser","Table","striped","bordered","hover","responsive","color","AdminUpdateUserScreen","userId","setIsAdmin","updateUser","loadingUpdate","errorUpdate","successUpdate","adminUpdateUser","Product","Img","Body","Title","Text","ProductsListScreen","useHistory","adminProductsList","products","createProduct","successCreate","createdProduct","deleteProductHandler","adminDeleteProduct","category","AdminUpdateProductScreen","setCategory","setDescription","setPrice","setCountInStock","setImage","updateProduct","adminUpdateProduct","multiple","onDone","base64","OrderListScreen","orderList","createdAt","substring","Footer","Homescreen","productList","sm","l","xl","MainScreen","App","path","exact","component","orderDetailsScreen","PlaceOrderScreen","ProductListScreen","cartScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","cartReducer","action","existItem","find","filter","reducer","combineReducers","reviews","getUser","deleteProduct","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleWare","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"6MA0BeA,EAlBA,WAGT,OACE,mCACG,sBAAKC,UAAU,kBAAf,UACG,qBAAKA,UAAU,cAAf,SACG,qBAAKC,IAAI,4BAA4BC,IAAI,OAE5C,sBAAKF,UAAU,eAAf,UACE,qBAAKC,IAAI,uBAAuBC,IAAI,KACpC,cAAC,gBAAD,CAAeC,GAAG,eAAlB,SAAiC,cAACC,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,UAA9B,iC,6FCwClCC,EAxDA,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KACpB,OACI,sBAAKT,UAAU,SAAf,UACI,mBAAGA,UACCQ,GAAS,EACP,cACAA,GAAS,GACT,uBACA,gBAEH,mBACCR,UACIQ,GAAS,EACP,cACAA,GAAS,IACT,uBACA,gBAIN,mBACAR,UACIQ,GAAS,EACP,cACAA,GAAS,IACT,uBACA,gBAIN,mBACAR,UACIQ,GAAS,EACP,cACAA,GAAS,IACT,uBACA,gBAIN,mBACAR,UACIQ,GAAS,EACP,cACAA,GAAS,IACT,uBACA,gBAGLC,GAAQA,M,yCCpDZC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAoB,oBAEpBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAGvBC,EAA6B,6BAC7BC,EAA6B,6BAC7BC,EAA0B,0BAE1BC,EAA+B,+BAC/BC,EAA+B,+BAC/BC,EAA4B,4BAC5BC,EAA6B,6BAE7BC,EAA+B,+BAC/BC,EAA+B,+BAC/BC,EAA4B,4BAG5BC,EAA+B,+BAC/BC,EAA+B,+BAC/BC,EAA4B,4BCwB5BC,EAAqB,SAACC,GAAD,8CAAQ,WAAMC,GAAN,iBAAAC,EAAA,sEAElCD,EAAS,CACL1B,KAAMQ,IAHwB,SAMboB,IAAMC,IAAN,wBAA2BJ,IANd,gBAM3BK,EAN2B,EAM3BA,KAEPJ,EAAS,CACL1B,KAAMS,EACNsB,QAASD,IAVqB,gDAelCJ,EAAS,CACL1B,KAAMU,EACNqB,QAAQ,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAS,KAAMA,UAjB7D,yDAAR,uD,SC7BnBC,EAjBA,WACX,OACG,cAACC,EAAA,EAAD,CACAC,UAAU,SACVC,KAAK,SACLC,MAAO,CACHC,MAAM,QACNC,OAAO,QACPC,OAAO,OACPC,QAAQ,SAPZ,SAUI,sBAAMC,MAAM,UAAZ,2B,SCZLC,EAAU,SAAC,GAAyB,IAAxB3C,EAAuB,EAAvBA,QAAS4C,EAAc,EAAdA,SACvB,OACI,cAACC,EAAA,EAAD,CAAO7C,QAAWA,EAAlB,SACK4C,KAKbD,EAAQG,aAAc,CAClB9C,QAAQ,QAGG2C,QCkGAI,EAtGO,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MAC9B,EAAsBC,mBAAS,GAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAGO3B,EAAW4B,cAIXC,EAAiBC,aAAa,SAAAC,GAAK,OAAIA,EAAMF,kBAC3CG,EAA2BH,EAA3BG,QAASC,EAAkBJ,EAAlBI,MAAOC,EAAWL,EAAXK,QAIxBC,qBAAU,WACNnC,EAASF,EAAmB0B,EAAMY,OAAOrC,OAC3C,CAACC,EAAUwB,IAUb,OACI,qBAAKvD,UAAU,UAAf,SAAyB,eAACoE,EAAA,EAAD,WACrB,cAAC,OAAD,CAAMpE,UAAU,oBAAoBG,GAAG,IAAvC,qBACC4D,EAAY,cAAC,EAAD,IACZC,EAAS,cAAC,EAAD,CAAS1D,QAAQ,SAAjB,SAA2B0D,IACrC,eAACK,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,CAAOvE,IAAKgE,EAAQQ,MAAOvE,IAAK+D,EAAQS,KAAMC,OAAK,MAEvD,cAACL,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACK,EAAA,EAAD,CAAWtE,QAAQ,QAAnB,UACI,cAACsE,EAAA,EAAUC,KAAX,UACI,6BAAKZ,EAAQS,SAEjB,cAACE,EAAA,EAAUC,KAAX,UACI,cAAC,EAAD,CAAQrE,MAAOyD,EAAQa,OAAQrE,KAAI,UAAKwD,EAAQc,WAAb,gBAEvC,eAACH,EAAA,EAAUC,KAAX,sBACaZ,EAAQe,SAErB,eAACJ,EAAA,EAAUC,KAAX,0BACgBZ,EAAQgB,oBAIhC,cAACX,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACW,EAAA,EAAD,CAAM5E,QAAQ,QAAd,SACI,eAACsE,EAAA,EAAD,CAAYtE,QAAQ,QAApB,UACI,cAACsE,EAAA,EAAUC,KAAX,UACI,eAACR,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,UAAK,iCAASL,EAAQe,eAG9B,cAACJ,EAAA,EAAUC,KAAX,UACI,eAACR,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,UAAML,EAAQkB,aAAe,EAAI,WAAa,sBAIlDlB,EAAQkB,aAAe,GACnB,cAACP,EAAA,EAAUC,KAAX,UACI,eAACR,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,kBACA,cAACA,EAAA,EAAD,UACA,cAACc,EAAA,EAAKC,QAAN,CAAcC,GAAG,SAAS9E,MAAOiD,EAAK8B,SAAU,SAACC,GAC9C9B,EAAO8B,EAAEC,OAAOjF,QADnB,SAGW,YAAIkF,MAAMzB,EAAQkB,cAAcQ,QAAQC,KAAI,SAAAC,GAAC,OACzC,wBAAoBrF,MAAOqF,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,eAWhD,cAACjB,EAAA,EAAUC,KAAX,UACI,cAACzE,EAAA,EAAD,CAAQJ,UAAU,YAAYK,KAAK,SAASyF,SAAmC,IAAzB7B,EAAQkB,aAAoBY,QApEjF,WACrBzC,EAAQ0C,KAAR,gBAAsBzC,EAAMY,OAAOrC,GAAnC,gBAA6C2B,KAmEzB,2CClGdwC,GAAgB,gBAChBC,GAAmB,mBACnBC,GAA6B,6BAC7BC,GAA2B,2BCA5BC,GAAY,SAACvE,EAAI2B,GAAL,8CAAa,WAAO1B,EAAUuE,GAAjB,iBAAAtE,EAAA,sEACXC,IAAMC,IAAN,wBAA2BJ,IADhB,gBAC1BK,EAD0B,EAC1BA,KAGRJ,EAAS,CACL1B,KAAM4F,GACN7D,QAAQ,CACJ6B,QAAS9B,EAAKoE,IACd7B,KAAMvC,EAAKuC,KACXD,MAAOtC,EAAKsC,MACZO,MAAO7C,EAAK6C,MACZG,aAAchD,EAAKgD,aACnB1B,SAIR+C,aAAaC,QAAQ,YAAaC,KAAKC,UAAUL,IAAWM,KAAKC,YAhB/B,2CAAb,yDCmGVC,GA9FI,SAAC,GAAgC,IAA/BvD,EAA8B,EAA9BA,MAAOwD,EAAuB,EAAvBA,SAAUzD,EAAa,EAAbA,QAChC0D,EAAYzD,EAAMY,OAAOrC,GAEzB2B,EAAMsD,EAASE,OAASC,OAAOH,EAASE,OAAOE,MAAM,KAAK,IAAM,EAEhEpF,EAAW4B,cAMTkD,EAFMhD,aAAY,SAAAC,GAAK,OAAIA,EAAM8C,QAEjCC,UAKR3C,qBAAU,WACF8C,GACAjF,EAASsE,GAAUW,EAAWvD,MAMpC,CAAC1B,EAAUiF,EAAWvD,IAExB,IAAM2D,EAAwB,SAACtF,GAC3BC,EDZ0B,SAACD,GAAD,OAAQ,SAACC,EAAUuE,GAC7CvE,EAAS,CACL1B,KAAM6F,GACN9D,QAAQN,IAGhB0E,aAAaC,QAAQ,YAAaC,KAAKC,UAAUL,IAAWM,KAAKC,aCMpDQ,CAAevF,KAMxB,OACI,qBAAK9B,UAAU,UAAf,SACA,eAACqE,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,+CACsB,IAArBsC,EAAUS,OAAgB,eAAC,EAAD,iCAA4B,cAAC,OAAD,CAAMnH,GAAG,IAAT,yBACnD,cAACyE,EAAA,EAAD,CAAWtE,QAAQ,QAAnB,SACKuG,EAAUjB,KAAI,SAAA2B,GAAI,OACnB,cAAC3C,EAAA,EAAUC,KAAX,UACI,eAACR,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,CAAOvE,IAAKsH,EAAK9C,MAAOvE,IAAKqH,EAAK7C,KAAMC,OAAK,EAAC6C,SAAO,MAEzD,cAAClD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACC,cAAC,OAAD,CAAMpE,GAAE,mBAAcoH,EAAKtD,SAA3B,SAAuCsD,EAAK7C,SAE7C,eAACJ,EAAA,EAAD,CAAKC,GAAI,EAAT,cAAcgD,EAAKvC,SACnB,cAACV,EAAA,EAAD,CAAKC,GAAI,EAAT,SACA,cAACa,EAAA,EAAKC,QAAN,CAAcC,GAAG,SAAS9E,MAAO+G,EAAK9D,IAAK8B,SAAU,SAACC,GAAD,OAAOzD,EAASsE,GAAUkB,EAAKtD,QAASiD,OAAO1B,EAAEC,OAAOjF,UAA7G,SAEY,YAAIkF,MAAM6B,EAAKpC,cAAcQ,QAAQC,KAAI,SAAAC,GAAC,OACtC,wBAAoBrF,MAAOqF,EAAI,EAA/B,SACKA,EAAI,GADIA,EAAI,UAOjC,cAACvB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACnE,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,QAC9ByF,QAAS,kBAAMqB,EAAsBG,EAAKtD,UAD1C,SAEG,0CAvBMsD,EAAKtD,iBAgCtC,cAACK,EAAA,EAAD,CAAKC,GAAK,EAAV,SACI,eAACW,EAAA,EAAD,WACI,cAACN,EAAA,EAAD,CAAWtE,QAAQ,QAAnB,SACI,eAACsE,EAAA,EAAUC,KAAX,WACA,4CAAegC,EAAUY,QAAO,SAACC,EAAKH,GAAN,OAAeG,EAAMH,EAAK9D,MAAK,GAA/D,aADA,IAEEoD,EAAUY,QAAO,SAACC,EAAKH,GAAN,OAAeG,EAAMH,EAAK9D,IAAM8D,EAAKvC,QAAO,GAAG2C,QAAQ,QAG9E,cAAC/C,EAAA,EAAUC,KAAX,UACI,cAACzE,EAAA,EAAD,CAAQC,KAAK,SAASL,UAAU,YAAY8F,SAA+B,IAArBe,EAAUS,OAAcvB,QApD9E,WACpBzC,EAAQ0C,KAAK,6BAmDO,8CC3ET4B,GAZO,SAAC,GAAgB,IAAf1E,EAAc,EAAdA,SACpB,OACI,cAACkB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKrE,UAAU,4BAAf,SACI,cAACsE,EAAA,EAAD,CAAKuD,GAAI,GAAItD,GAAI,EAAjB,SACKrB,SCRR4E,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAClBC,GAAc,cAGdC,GAAwB,qBACxBC,GAAwB,qBACxBC,GAAqB,kBAErBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAGnBC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAG3BC,GAA4B,4BAC5BC,GAA4B,4BAC5BC,GAAyB,yBACzBC,GAA0B,0BAE1BC,GAA8B,2BAC9BC,GAA8B,2BAC9BC,GAA2B,wBAG3BC,GAA2B,2BAC3BC,GAA2B,2BAC3BC,GAAwB,wBAExBC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BCD5BC,GAAS,kBAAM,SAAC1H,GACzByE,aAAakD,WAAW,YACxB3H,EACI,CACI1B,KAAM4H,KAIdlG,EACI,CACI1B,KAAMyI,OA4CLa,GAAgB,SAAC7H,GAAD,8CAAQ,WAAMC,EAAUuE,GAAhB,uBAAAtE,EAAA,sEAE7BD,EAAS,CACL1B,KAAMgI,KAHmB,EAOO/B,IAAfsD,EAPQ,EAOrBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYJ,EAASK,SAZb,SAgBNhI,IAAMC,IAAN,qBAAwBJ,GAAMgI,GAhBxB,gBAgBrB3H,EAhBqB,EAgBrBA,KAERJ,EAAS,CACL1B,KAAMiI,GACNlG,QAASD,IApBgB,kDAyB7BJ,EAAS,CACL1B,KAAMkI,GACNnG,QAAQ,KAAMC,UACd,KAAMA,SAASF,KAAKG,QACpB,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UA9BmB,0DAAR,yDCjBd4H,GA/DK,SAAC,GAAyB,IAAxBnD,EAAuB,EAAvBA,SAAUzD,EAAa,EAAbA,QAC5B,EAA0BE,mBAAS,IAAnC,mBAAO2G,EAAP,KAAcC,EAAd,KACA,EAAgC5G,mBAAS,IAAzC,mBAAO6G,EAAP,KAAiBC,EAAjB,KAEMvI,EAAW4B,cAEXkG,EAAYhG,aAAY,SAAAC,GAAK,OAAIA,EAAM+F,aACtC9F,EAA4B8F,EAA5B9F,QAASC,EAAmB6F,EAAnB7F,MAAO4F,EAAYC,EAAZD,SAEjBW,EAAWxD,EAASE,OAASF,EAASE,OAAOE,MAAM,KAAK,GAAK,IAEnEjD,qBAAU,WACH0F,GACCtG,EAAQ0C,KAAKuE,KAGlB,CAACjH,EAASsG,EAAUW,IASvB,OAAO,qBAAKvK,UAAU,UAAf,SAAyB,eAAC,GAAD,WAC5B,uCACCgE,GAAS,cAAC,EAAD,CAAS1D,QAAQ,SAAjB,SAA2B0D,IACpCD,GAAW,cAAC,EAAD,IACZ,eAACqB,EAAA,EAAD,CAAMoF,SAXY,SAAChF,GACnBA,EAAEiF,iBAEF1I,ED5Ba,SAACoI,EAAOE,GAAR,8CAAqB,WAAMtI,GAAN,mBAAAC,EAAA,sEAElCD,EAAS,CACL1B,KAAMyH,KAIJgC,EAAS,CACXC,QAAS,CACL,eAAgB,qBATU,SAaX9H,IAAMyI,KAAK,mBAAoB,CAACP,QAAOE,YAAWP,GAbvC,gBAa1B3H,EAb0B,EAa1BA,KAERJ,EAAS,CACL1B,KAAM0H,GACN3F,QAASD,IAGbqE,aAAaC,QAAQ,WAAYC,KAAKC,UAAUxE,IApBd,kDAsBlCJ,EAAS,CACL1B,KAAM2H,GACN5F,QAAQ,KAAMC,UACd,KAAMA,SAASF,KAAKG,QACpB,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UA3BwB,0DAArB,sDC4BJqI,CAAMR,EAAOE,KAQtB,UACI,eAACjF,EAAA,EAAKwF,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,4BACA,cAAC1F,EAAA,EAAKC,QAAN,CACAhF,KAAK,QACL0K,YAAY,cACZvK,MAAO2J,EACP5E,SAAU,SAACC,GAAD,OAAO4E,EAAS5E,EAAEC,OAAOjF,aAIvC,eAAC4E,EAAA,EAAKwF,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,uBACA,cAAC1F,EAAA,EAAKC,QAAN,CACAhF,KAAK,WACL0K,YAAY,iBACZvK,MAAO6J,EACP9E,SAAU,SAACC,GAAD,OAAO8E,EAAY9E,EAAEC,OAAOjF,aAI1C,cAACJ,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,UAA9B,sBAGJ,cAAC+D,EAAA,EAAD,CAAKrE,UAAU,OAAf,SACI,eAACsE,EAAA,EAAD,0BACa,GACb,cAAC,OAAD,CAAMnE,GAAIoK,EAAQ,6BAAyBA,GAAa,YAAxD,gCCmCGS,GA1FQ,SAAC,GAAyB,IAAxBjE,EAAuB,EAAvBA,SAAUzD,EAAa,EAAbA,QAC/B,EAAwBE,mBAAS,IAAjC,mBAAOkB,EAAP,KAAauG,EAAb,KACA,EAA0BzH,mBAAS,IAAnC,mBAAO2G,EAAP,KAAcC,EAAd,KACA,EAAgC5G,mBAAS,IAAzC,mBAAO6G,EAAP,KAAiBC,EAAjB,KACA,EAA8C9G,mBAAS,IAAvD,mBAAO0H,EAAP,KAAwBC,EAAxB,KACA,EAA8B3H,mBAAS,MAAvC,mBAAOlB,EAAP,KAAgB8I,EAAhB,KAEMrJ,EAAW4B,cAEX0H,EAAexH,aAAY,SAAAC,GAAK,OAAIA,EAAMuH,gBACzCtH,EAA4BsH,EAA5BtH,QAASC,EAAmBqH,EAAnBrH,MAAO4F,EAAYyB,EAAZzB,SAEjBW,EAAWxD,EAASE,OAASF,EAASE,OAAOE,MAAM,KAAK,GAAK,IAEnEjD,qBAAU,WACH0F,GACCtG,EAAQ0C,KAAKuE,KAGlB,CAACjH,EAASsG,EAAUW,IAYvB,OAAO,qBAAKvK,UAAU,UAAf,SAAyB,eAAC,GAAD,WAC5B,0CACCsC,GAAW,cAAC,EAAD,CAAShC,QAAQ,SAAjB,SAA2BgC,IACtC0B,GAAS,cAAC,EAAD,CAAS1D,QAAQ,SAAjB,SAA2B0D,IACpCD,GAAW,cAAC,EAAD,IACZ,eAACqB,EAAA,EAAD,CAAMoF,SAfY,SAAChF,GACnBA,EAAEiF,iBACCJ,IAAaa,EACZE,EAAW,0BAEXrJ,EFcY,SAAC2C,EAAMyF,EAAOE,GAAd,8CAA2B,WAAMtI,GAAN,mBAAAC,EAAA,sEAE3CD,EAAS,CACL1B,KAAM6H,KAIJ4B,EAAS,CACXC,QAAS,CACL,eAAgB,qBATmB,SAapB9H,IAAMyI,KAAK,aAAc,CAAChG,OAAMyF,QAAOE,YAAWP,GAb9B,gBAanC3H,EAbmC,EAanCA,KAERJ,EAAS,CACL1B,KAAM8H,GACN/F,QAASD,IAGbJ,EAAS,CACL1B,KAAM0H,GACN3F,QAASD,IAGbqE,aAAaC,QAAQ,WAAYC,KAAKC,UAAUxE,IAzBL,kDA2B3CJ,EAAS,CACL1B,KAAM+H,GACNhG,QAAQ,KAAMC,UACd,KAAMA,SAASF,KAAKG,QACpB,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UAhCiC,0DAA3B,sDEdHgJ,CAAS5G,EAAMyF,EAAOE,KAUnC,UACI,eAACjF,EAAA,EAAKwF,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,mBACA,cAAC1F,EAAA,EAAKC,QAAN,CACAhF,KAAK,OACL0K,YAAY,aACZvK,MAAOkE,EACPa,SAAU,SAACC,GAAD,OAAOyF,EAAQzF,EAAEC,OAAOjF,aAItC,eAAC4E,EAAA,EAAKwF,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,4BACA,cAAC1F,EAAA,EAAKC,QAAN,CACAhF,KAAK,QACL0K,YAAY,cACZvK,MAAO2J,EACP5E,SAAU,SAACC,GAAD,OAAO4E,EAAS5E,EAAEC,OAAOjF,aAIvC,eAAC4E,EAAA,EAAKwF,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,uBACA,cAAC1F,EAAA,EAAKC,QAAN,CACAhF,KAAK,WACL0K,YAAY,iBACZvK,MAAO6J,EACP9E,SAAU,SAACC,GAAD,OAAO8E,EAAY9E,EAAEC,OAAOjF,aAI1C,eAAC4E,EAAA,EAAKwF,MAAN,CAAYC,UAAU,kBAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,+BACA,cAAC1F,EAAA,EAAKC,QAAN,CACAhF,KAAK,WACL0K,YAAY,mBACZvK,MAAO0K,EACP3F,SAAU,SAACC,GAAD,OAAO2F,EAAmB3F,EAAEC,OAAOjF,aAIjD,cAACJ,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,UAA9B,yBAGJ,cAAC+D,EAAA,EAAD,CAAKrE,UAAU,OAAf,SACI,eAACsE,EAAA,EAAD,+BACkB,GAClB,cAAC,OAAD,CAAMnE,GAAIoK,EAAQ,0BAAsBA,GAAa,SAArD,8BC9FCgB,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAEpBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAElBC,GAA2B,2BAC3BC,GAA2B,2BAC3BC,GAAwB,wBAGxBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBC+FpBC,GA9GO,SAAC,GAAe,IAAdrJ,EAAa,EAAbA,QACpB,EAAwBE,mBAAS,IAAjC,mBAAOkB,EAAP,KAAauG,EAAb,KACA,EAA0BzH,mBAAS,IAAnC,mBAAO2G,EAAP,KAAcC,EAAd,KACA,EAAgC5G,mBAAS,IAAzC,mBAAO6G,EAAP,KAAiBC,EAAjB,KACA,EAA8C9G,mBAAS,IAAvD,mBAAO0H,EAAP,KAAwBC,EAAxB,KACA,EAA8B3H,mBAAS,MAAvC,mBAAOlB,EAAP,KAAgB8I,EAAhB,KAEMrJ,EAAW4B,cAEXiJ,EAAa/I,aAAY,SAAAC,GAAK,OAAIA,EAAM8I,cACvC7I,EAAwB6I,EAAxB7I,QAASC,EAAe4I,EAAf5I,MAAO6I,EAAQD,EAARC,KAGhBjD,EADW/F,aAAY,SAAAC,GAAK,OAAIA,EAAM+F,aACtCD,SAGAkD,EADmBjJ,aAAY,SAAAC,GAAK,OAAIA,EAAMiJ,qBAC9CD,QAEDE,EAAanJ,aAAY,SAAAC,GAAK,OAAIA,EAAMkJ,cACeA,EAAtDjJ,QAAsDiJ,EAA/BhJ,MAA+BgJ,EAAVC,OAGnD/I,qBAAU,WAIF0F,EAGIiD,EAAKnI,MAILuG,EAAQ4B,EAAKnI,MACb0F,EAASyC,EAAK1C,SAJdpI,EAAS4H,GAAc,YACvB5H,ECwFa,uCAAM,WAAMA,EAAUuE,GAAhB,uBAAAtE,EAAA,sEAE3BD,EAAS,CACL1B,KAAM4L,KAHiB,EAOS3F,IAAfsD,EAPM,EAOnBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYJ,EAASK,SAXf,SAiBNhI,IAAMC,IAAI,uBAAwB4H,GAjB5B,gBAiBpB3H,EAjBoB,EAiBpBA,KAEPJ,EAAS,CACL1B,KAAM6L,GACN9J,QAASD,IArBc,kDA0B3BJ,EAAS,CACL1B,KAAM8L,GACN/J,QAAQ,KAAMC,UACd,KAAMA,SAASF,KAAKG,QACpB,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UA/BiB,0DAAN,0DD5FjBgB,EAAQ0C,KAAK,YAWlB,CAACjE,EAAUuB,EAASsG,EAAUiD,IAYjC,OAAO,qBAAK7M,UAAU,UAAf,SAAyB,eAACqE,EAAA,EAAD,WAC5B,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UAEA,8CACCjC,GAAW,cAAC,EAAD,CAAShC,QAAQ,SAAjB,SAA2BgC,IACtC0B,GAAS,cAAC,EAAD,CAAS1D,QAAQ,SAAjB,SAA2B0D,IACpC8I,GAAW,cAAC,EAAD,CAASxM,QAAQ,UAAjB,6BACXyD,GAAW,cAAC,EAAD,IACZ,eAACqB,EAAA,EAAD,CAAMoF,SAlBY,SAAChF,GACnBA,EAAEiF,iBACCJ,IAAaa,EACZE,EAAW,0BAEXrJ,EJuEqB,SAAC8K,GAAD,8CAAU,WAAM9K,EAAUuE,GAAhB,uBAAAtE,EAAA,sEAEnCD,EAAS,CACL1B,KAAMmI,KAHyB,EAOClC,IAAfsD,EAPc,EAO3BC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYJ,EAASK,SAZP,SAgBZhI,IAAMiL,IAAI,qBAAsBL,EAAM/C,GAhB1B,gBAgB3B3H,EAhB2B,EAgB3BA,KAERJ,EAAS,CACL1B,KAAMoI,GACNrG,QAASD,IApBsB,kDAyBnCJ,EAAS,CACL1B,KAAMqI,GACNtG,QAAQ,KAAMC,UACd,KAAMA,SAASF,KAAKG,QACpB,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UA9ByB,0DAAV,wDIvEZ6K,CAAkB,CAACrL,GAAI+K,EAAKtG,IAAK7B,OAAMyF,QAAOE,eAa3D,UACI,eAACjF,EAAA,EAAKwF,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,mBACA,cAAC1F,EAAA,EAAKC,QAAN,CACAhF,KAAK,OACL0K,YAAY,aACZvK,MAAOkE,EACPa,SAAU,SAACC,GAAD,OAAOyF,EAAQzF,EAAEC,OAAOjF,aAItC,eAAC4E,EAAA,EAAKwF,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,4BACA,cAAC1F,EAAA,EAAKC,QAAN,CACAhF,KAAK,QACL0K,YAAY,cACZvK,MAAO2J,EACP5E,SAAU,SAACC,GAAD,OAAO4E,EAAS5E,EAAEC,OAAOjF,aAIvC,eAAC4E,EAAA,EAAKwF,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,uBACA,cAAC1F,EAAA,EAAKC,QAAN,CACAhF,KAAK,WACL0K,YAAY,iBACZvK,MAAO6J,EACP9E,SAAU,SAACC,GAAD,OAAO8E,EAAY9E,EAAEC,OAAOjF,aAI1C,eAAC4E,EAAA,EAAKwF,MAAN,CAAYC,UAAU,kBAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,+BACA,cAAC1F,EAAA,EAAKC,QAAN,CACAhF,KAAK,WACL0K,YAAY,mBACZvK,MAAO0K,EACP3F,SAAU,SAACC,GAAD,OAAO2F,EAAmB3F,EAAEC,OAAOjF,aAIjD,cAACJ,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,UAA9B,0BAKJ,cAACgE,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,mD,UEjEG6I,GA9CO,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACzC,OACI,eAACC,GAAA,EAAD,CAAKzN,UAAU,8BAAf,UACI,cAACyN,GAAA,EAAI5I,KAAL,UACKwI,EACG,cAAC,gBAAD,CAAelN,GAAG,SAAlB,SACI,cAACsN,GAAA,EAAIC,KAAL,wBAGJ,cAACD,GAAA,EAAIC,KAAL,CAAU5H,UAAQ,EAAlB,uBAIR,cAAC2H,GAAA,EAAI5I,KAAL,UACKyI,EACG,cAAC,gBAAD,CAAenN,GAAG,YAAlB,SACI,cAACsN,GAAA,EAAIC,KAAL,yBAGJ,cAACD,GAAA,EAAIC,KAAL,CAAU5H,UAAQ,EAAlB,wBAIR,cAAC2H,GAAA,EAAI5I,KAAL,UACK0I,EACG,cAAC,gBAAD,CAAepN,GAAG,WAAlB,SACI,cAACsN,GAAA,EAAIC,KAAL,wBAGJ,cAACD,GAAA,EAAIC,KAAL,CAAU5H,UAAQ,EAAlB,uBAIR,cAAC2H,GAAA,EAAI5I,KAAL,UACK2I,EACG,cAAC,gBAAD,CAAerN,GAAG,cAAlB,SACI,cAACsN,GAAA,EAAIC,KAAL,4BAGJ,cAACD,GAAA,EAAIC,KAAL,CAAU5H,UAAQ,EAAlB,+BCoCL6H,GAxEQ,SAAC,GAAe,IAAdrK,EAAa,EAAbA,QAGbsK,EADK/J,aAAY,SAAAC,GAAK,OAAIA,EAAM8C,QAChCgH,gBAER,EAA8BpK,mBAASoK,EAAgBC,SAAvD,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAwBtK,mBAASoK,EAAgBG,MAAjD,mBAAOA,EAAP,KAAaC,EAAb,KACA,EAAoCxK,mBAASoK,EAAgBK,YAA7D,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAA8B1K,mBAASoK,EAAgBO,SAAvD,mBAAOA,EAAP,KAAgBC,EAAhB,KAEMrM,EAAW4B,cAUjB,OAAO,eAAC,GAAD,CAAe3D,UAAU,UAAzB,UAEH,cAAC,GAAD,CAAeqN,OAAK,EAACC,OAAK,IAC1B,0CACA,eAAClI,EAAA,EAAD,CAAMoF,SAXY,SAAChF,GXYQ,IAACrD,EWX5BqD,EAAEiF,iBACF1I,GXU4BI,EWVC,CAAC0L,UAASE,OAAME,aAAYE,WXUpB,SAACpM,GAC1CA,EAAS,CACL1B,KAAM8F,GACN/D,QAAQD,IAGhBqE,aAAaC,QAAQ,kBAAmBC,KAAKC,UAAUxE,OWf/CmB,EAAQ0C,KAAK,aAQb,UACI,eAACZ,EAAA,EAAKwF,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,sBACA,cAAC1F,EAAA,EAAKC,QAAN,CACChF,KAAK,UACL0K,YAAY,gBACZvK,MAAOqN,EACPtI,SAAU,SAACC,GAAD,OAAOsI,EAAWtI,EAAEC,OAAOjF,aAI1C,eAAC4E,EAAA,EAAKwF,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,mBACA,cAAC1F,EAAA,EAAKC,QAAN,CACChF,KAAK,OACL0K,YAAY,aACZvK,MAAOuN,EACPxI,SAAU,SAACC,GAAD,OAAOwI,EAAQxI,EAAEC,OAAOjF,aAIvC,eAAC4E,EAAA,EAAKwF,MAAN,CAAYC,UAAU,cAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,0BACA,cAAC1F,EAAA,EAAKC,QAAN,CACChF,KAAK,cACL0K,YAAY,oBACZvK,MAAOyN,EACP1I,SAAU,SAACC,GAAD,OAAO0I,EAAc1I,EAAEC,OAAOjF,aAI7C,eAAC4E,EAAA,EAAKwF,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,sBACA,cAAC1F,EAAA,EAAKC,QAAN,CACChF,KAAK,UACL0K,YAAY,gBACZvK,MAAO2N,EACP5I,SAAU,SAACC,GAAD,OAAO4I,EAAW5I,EAAEC,OAAOjF,aAI1C,cAACJ,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,UAA9B,6BCdG+N,GAnDO,SAAC,GAAe,IAAd/K,EAAa,EAAbA,QAEPO,aAAY,SAAAC,GAAK,OAAIA,EAAM8C,QAChCgH,iBAGJtK,EAAQ0C,KAAK,aAGjB,MAA0CxC,mBAAS,UAAnD,mBAAO8K,EAAP,KAAsBC,EAAtB,KAGMxM,EAAW4B,cAUjB,OAAO,qBAAK3D,UAAU,UAAf,SAAyB,eAAC,GAAD,WAE5B,cAAC,GAAD,CAAeqN,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,gDACA,eAACnI,EAAA,EAAD,CAAMoF,SAXY,SAAChF,GZmBM,IAACrD,EYlB1BqD,EAAEiF,iBACF1I,GZiB0BI,EYjBCmM,EZiBQ,SAACvM,GACxCA,EAAS,CACL1B,KAAM+F,GACNhE,QAAQD,IAGhBqE,aAAaC,QAAQ,gBAAiBC,KAAKC,UAAUxE,OYtB7CmB,EAAQ0C,KAAK,gBAQb,UACI,eAACZ,EAAA,EAAKwF,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,CAAYxF,GAAG,SAAf,2BAEJ,cAAChB,EAAA,EAAD,UACA,cAACc,EAAA,EAAKoJ,MAAN,CACAnO,KAAK,QACLoO,MAAM,wBACN3M,GAAG,SACH4C,KAAK,gBACLlE,MAAM,SACNkO,SAAO,EACPnJ,SAAU,SAACC,GAAD,OAAO+I,EAAiB/I,EAAEC,OAAOjF,eAM3C,cAACJ,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,UAA9B,+BC2FGqO,GAtIU,SAAC,GAAe,IAAdrL,EAAa,EAAbA,QACjBvB,EAAW4B,cACXiD,EAAO/C,aAAY,SAAAC,GAAK,OAAIA,EAAM8C,QAIlCgI,EAAc,SAACC,GACjB,OAAQC,KAAKC,MAAY,IAANF,GAAa,KAAKlH,QAAQ,IAGjDf,EAAKoI,WAAaJ,EAAahI,EAAKC,UAAUY,QAAO,SAACC,EAAKH,GAAN,OAAeG,EAAMH,EAAKvC,MAAQuC,EAAK9D,MAAK,IACjGmD,EAAKqI,cAAgBL,EAAahI,EAAKoI,WAAa,IAAM,EAAI,KAC9DpI,EAAKsI,SAAWN,EAAY1H,QAAQ,IAAON,EAAKoI,YAAYrH,QAAQ,KACpEf,EAAKuI,YAAcjI,OAAON,EAAKoI,YAAc9H,OAAON,EAAKqI,eAAiB/H,OAAON,EAAKsI,WAAWvH,QAAQ,GAEzG,IAAMyH,EAAcvL,aAAY,SAAAC,GAAK,OAAIA,EAAMsL,eACvCC,EAA0BD,EAA1BC,MAAOvC,EAAmBsC,EAAnBtC,QAAS9I,EAAUoL,EAAVpL,MAExBE,qBAAU,WACH4I,GACCxJ,EAAQ0C,KAAR,iBAAuBqJ,EAAM9I,QAIlC,CAACjD,EAASwJ,IAeb,OACI,sBAAK9M,UAAU,UAAf,UACC,cAAC,GAAD,CAAeqN,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,eAACnJ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACK,EAAA,EAAD,CAAWtE,QAAQ,QAAnB,UACI,eAACsE,EAAA,EAAUC,KAAX,WACI,0CACA,8BACI,8CACC+B,EAAKgH,gBAAgBC,QAF1B,KAEqCjH,EAAKgH,gBAAgBG,KAAM,GAC3DnH,EAAKgH,gBAAgBK,WAH1B,IAGuC,GAClCrH,EAAKgH,gBAAgBO,cAI9B,eAACvJ,EAAA,EAAUC,KAAX,WACI,gDACA,qDACC+B,EAAK0H,iBAGV,eAAC1J,EAAA,EAAUC,KAAX,WACI,6CAC2B,IAA1B+B,EAAKC,UAAUS,OAAe,cAAC,EAAD,iCAC3B,cAAC1C,EAAA,EAAD,CAAWtE,QAAQ,QAAnB,SACKsG,EAAKC,UAAUjB,KAAI,SAAC2B,EAAM+H,GAAP,OAChB,cAAC1K,EAAA,EAAUC,KAAX,UACI,cAACR,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,cAACC,EAAA,EAAD,CAAOvE,IAAKsH,EAAK9C,MAAOvE,IAAKqH,EAAK7C,KAAMC,OAAK,EAAC6C,SAAO,IACrD,cAAClD,EAAA,EAAD,UACA,cAAC,OAAD,CAAMnE,GAAE,mBAAcoH,EAAKtD,SAA3B,SACKsD,EAAK7C,SAGV,eAACJ,EAAA,EAAD,CAAKC,GAAI,EAAT,UACKgD,EAAK9D,IADV,OACmB8D,EAAKvC,MADxB,OACmCuC,EAAK9D,IAAM8D,EAAKvC,eAV1CsK,gBAqB7C,cAAChL,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACK,EAAA,EAAD,CAAWtE,QAAQ,QAAnB,UACI,cAACsE,EAAA,EAAUC,KAAX,UACI,iDAEJ,cAACD,EAAA,EAAUC,KAAX,UACI,eAACR,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,oBACI,eAACA,EAAA,EAAD,eAAOsC,EAAKoI,mBAIxB,cAACpK,EAAA,EAAUC,KAAX,UACI,eAACR,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,uBACI,eAACA,EAAA,EAAD,eAAOsC,EAAKqI,sBAIxB,cAACrK,EAAA,EAAUC,KAAX,UACI,eAACR,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,kBACI,eAACA,EAAA,EAAD,eAAOsC,EAAKsI,iBAIxB,cAACtK,EAAA,EAAUC,KAAX,UACI,eAACR,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,oBACI,eAACA,EAAA,EAAD,eAAOsC,EAAKuI,mBAIxB,cAACvK,EAAA,EAAUC,KAAX,UACab,GAAS,cAAC,EAAD,CAAS1D,QAAQ,SAAjB,SAA2B0D,MAEjD,cAACY,EAAA,EAAUC,KAAX,UACG,cAACzE,EAAA,EAAD,CAAQC,KAAK,SAASL,UAAU,YAAY8F,SAA6B,IAAnBc,EAAKC,UAAiBd,QAjGtE,WACtBhE,EJ/BmB,SAACsN,GAAD,8CAAW,WAAMtN,EAAUuE,GAAhB,uBAAAtE,EAAA,sEAE9BD,EAAS,CACL1B,KAAMkL,KAHoB,EAOMjF,IAAfsD,EAPS,EAOtBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYJ,EAASK,SAZZ,SAgBPhI,IAAMyI,KAAK,cAAe2E,EAAOvF,GAhB1B,gBAgBtB3H,EAhBsB,EAgBtBA,KAERJ,EAAS,CACL1B,KAAMmL,GACNpJ,QAASD,IApBiB,kDAyB9BJ,EAAS,CACL1B,KAAMoL,GACNrJ,QAAQ,KAAMC,UACd,KAAMA,SAASF,KAAKG,QACpB,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UA9BoB,0DAAX,wDI+BViN,CAAY,CACjBC,WAAY5I,EAAKC,UACjB+G,gBAAiBhH,EAAKgH,gBACtBU,cAAe1H,EAAK0H,cACpBU,WAAYpI,EAAKoI,WACjBC,cAAerI,EAAKqI,cACpBC,SAAUtI,EAAKsI,SACfC,WAAYvI,EAAKuI,eAyFL,uC,UCjHTM,GAVA,SAACC,GACZ,IAAOC,EAAcD,EAAdC,WACP,OACI,gCACI,cAAC,GAAD,CAAQA,WAAYA,IACpB,cAAC,GAAD,QAOCC,GAAS,SAACF,GAEnB,IAAM3N,EAAW4B,cAEViG,EADW/F,aAAY,SAAAC,GAAK,OAAIA,EAAM+F,aACtCD,SAEA+F,EAAcD,EAAdC,WAOP,OACI,sBAAK3P,UAAU,oBAAf,UACI,qBAAKA,UAAU,WAAf,SACO,qBAAKC,IAAI,oBAAoBC,IAAI,0BAGzC,qBAAKF,UAAU,QAAf,SACK,+BACG,qBAAKA,UAAU,UAAf,SACK,eAAC,OAAD,CAAMG,GAAG,QAAQwC,MAAO,CAAEkN,eAAgB,QAA1C,UACI,qBAAM5P,IAAI,uBAAuBC,IAAI,KADzC,IAC+CyP,OAKrD,cAAC,OAAD,CAAMxP,GAAG,IAAKwC,MAAO,CAAEkN,eAAgB,QAAvC,SACM,wCAEN,uCAICjG,EACQ,eAACkG,GAAA,EAAD,CAAaC,MAAOnG,EAASlF,KAAM5C,GAAG,WAAtC,UACG,cAAC,gBAAD,CAAe3B,GAAG,WAAlB,SACG,cAAC2P,GAAA,EAAYjL,KAAb,wBAEH,cAACiL,GAAA,EAAYjL,KAAb,CAAkBkB,QAhCtB,WACnBhE,EAAS0H,OA+Bc,uBAGe,cAAC,gBAAD,CAAetJ,GAAG,SAAUwC,MAAO,CAAEkN,eAAgB,QAArD,SACf,cAACpC,GAAA,EAAIC,KAAL,UAAU,2CAGb9D,GAAYA,EAASoG,SACjB,eAACF,GAAA,EAAD,CAAaC,MAAM,aAAajO,GAAG,YAAnC,UACG,cAAC,gBAAD,CAAe3B,GAAG,eAAlB,SACI,cAAC2P,GAAA,EAAYjL,KAAb,sBAGJ,cAAC,gBAAD,CAAe1E,GAAG,kBAAlB,SACI,cAAC2P,GAAA,EAAYjL,KAAb,yBAGJ,cAAC,gBAAD,CAAe1E,GAAG,gBAAlB,SACI,cAAC2P,GAAA,EAAYjL,KAAb,mCA2BzBoL,GAAY,WACrB,OACI,qBAAKjQ,UAAU,0CAAf,SACI,+BACA,eAAC8P,GAAA,EAAD,CAAaC,MAAM,MAAMjO,GAAG,WAA5B,UACI,cAAC,gBAAD,CAAe3B,GAAG,eAAlB,SACI,cAAC2P,GAAA,EAAYjL,KAAb,6BAGJ,cAAC,gBAAD,CAAe1E,GAAG,kBAAlB,SACI,cAAC2P,GAAA,EAAYjL,KAAb,0BAGJ,cAAC,gBAAD,CAAe1E,GAAG,gBAAlB,SACI,cAAC2P,GAAA,EAAYjL,KAAb,2BAKR,eAACiL,GAAA,EAAD,CAAaC,MAAM,MAAMjO,GAAG,WAA5B,UACI,cAAC,gBAAD,CAAe3B,GAAG,eAAlB,SACI,cAAC2P,GAAA,EAAYjL,KAAb,yBAGJ,cAAC,gBAAD,CAAe1E,GAAG,kBAAlB,SACI,cAAC2P,GAAA,EAAYjL,KAAb,0BAGJ,cAAC,gBAAD,CAAe1E,GAAG,gBAAlB,SACI,cAAC2P,GAAA,EAAYjL,KAAb,6BAKR,eAACiL,GAAA,EAAD,CAAaC,MAAM,OAAOjO,GAAG,WAA7B,UACI,cAAC,gBAAD,CAAe3B,GAAG,eAAlB,SACI,cAAC2P,GAAA,EAAYjL,KAAb,2BAGJ,cAAC,gBAAD,CAAe1E,GAAG,kBAAlB,SACI,cAAC2P,GAAA,EAAYjL,KAAb,0BAGJ,cAAC,gBAAD,CAAe1E,GAAG,gBAAlB,SACI,cAAC2P,GAAA,EAAYjL,KAAb,2BAKR,eAACiL,GAAA,EAAD,CAAaC,MAAM,UAAUjO,GAAG,WAAhC,UACI,cAAC,gBAAD,CAAe3B,GAAG,eAAlB,SACI,cAAC2P,GAAA,EAAYjL,KAAb,2BAGJ,cAAC,gBAAD,CAAe1E,GAAG,kBAAlB,SACI,cAAC2P,GAAA,EAAYjL,KAAb,wBAGJ,cAAC,gBAAD,CAAe1E,GAAG,gBAAlB,SACI,cAAC2P,GAAA,EAAYjL,KAAb,uC,SCkCLqL,GA5LY,SAAC,GAAa,IAwBZrB,EAtBnBsB,EAF8B,EAAX5M,MAEHY,OAAOrC,GAE7B,EAAgC0B,oBAAS,GAAzC,mBAAO4M,EAAP,KAAiBC,EAAjB,KAEMtO,EAAW4B,cAGX2M,EAAezM,aAAY,SAAAC,GAAK,OAAIA,EAAMwM,gBACxCjB,EAA0BiB,EAA1BjB,MAAOtL,EAAmBuM,EAAnBvM,QAASC,EAAUsM,EAAVtM,MAElBuM,EAAW1M,aAAY,SAAAC,GAAK,OAAIA,EAAMyM,YAC5BC,EAAmCD,EAA3CxM,QAA4B0M,EAAeF,EAAvBzD,QAIpBlD,EADU/F,aAAY,SAAAC,GAAK,OAAIA,EAAM+F,aACrCD,SAGF8G,EAAe7M,aAAY,SAAAC,GAAK,OAAIA,EAAM4M,gBAChCC,EAA2CD,EAAnD3M,QAAgC6M,EAAmBF,EAA3B5D,QAEhC,IAAI/I,EAAS,CAKTsL,EAAML,YAJeH,EAIWQ,EAAMG,WAAW/H,QAAO,SAACC,EAAKH,GAAN,OAAeG,EAAMH,EAAKvC,MAAQuC,EAAK9D,MAAK,IAHxFqL,KAAKC,MAAY,IAANF,GAAa,KAAKlH,QAAQ,IAOrDzD,qBAAU,WAEN,INDwBpC,EMClB+O,EAAe,uCAAG,gCAAA7O,EAAA,sEACWC,IAAMC,IAAI,sBADrB,gBACP4O,EADO,EACb3O,MACD4O,EAASC,SAASC,cAAc,WAC/B5Q,KAAO,kBACd0Q,EAAO9Q,IAAP,kDAAwD6Q,GACxDC,EAAOG,OAAQ,EACfH,EAAQI,OAAS,WACbd,GAAY,IAGhBW,SAASI,KAAKC,YAAYN,GAVN,4CAAH,sDAcjB1B,GAASA,EAAM9I,MAAQ4J,GAAWM,GAAcG,GAChD7O,EAAS,CAAC1B,KAAM2L,KAChBjK,EAAS,CAAC1B,KAAMqM,KAChB3K,GNlBoBD,EMkBKqO,ENlBN,uCAAQ,WAAMpO,EAAUuE,GAAhB,uBAAAtE,EAAA,sEAE/BD,EAAS,CACL1B,KAAMqL,KAHqB,EAOKpF,IAAfsD,EAPU,EAOvBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYJ,EAASK,SAXX,SAkBVhI,IAAMC,IAAN,sBAAyBJ,GAAMgI,GAlBrB,gBAkBxB3H,EAlBwB,EAkBxBA,KAEPJ,EAAS,CACL1B,KAAMsL,GACNvJ,QAASD,IAtBkB,kDA2B/BJ,EAAS,CACL1B,KAAMuL,GACNxJ,QAAQ,KAAMC,UACd,KAAMA,SAASF,KAAKG,QACpB,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UAhCqB,0DAAR,2DMmBX+M,EAAMiC,SACVC,OAAOC,OAGPnB,GAAY,GAFZQ,OAMT,CAAC9O,EAAUoO,EAASd,EAAOoB,IAalC,OAAO1M,EAAU,cAAC,EAAD,IAAaC,EAAQ,cAAC,EAAD,CAAS1D,QAAQ,SAAjB,SAA2B0D,IAAmB,sBAAKhE,UAAU,UAAf,UAEpF,wCAAWqP,EAAM9I,OACjB,eAAClC,EAAA,EAAD,WACa,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACK,EAAA,EAAD,CAAWtE,QAAQ,QAAnB,UACI,eAACsE,EAAA,EAAUC,KAAX,WACI,0CAEA,8BAAG,4CAAH,IAA4BwK,EAAMxC,KAAKnI,QACvC,8BACI,6CADJ,IAC8B,IAC1B,mBAAG+M,KAAI,iBAAYpC,EAAMxC,KAAK1C,OAA9B,SAAwCkF,EAAMxC,KAAK1C,WACvD,8BACI,8CACCkF,EAAMzB,gBAAgBC,QAF3B,KAEsCwB,EAAMzB,gBAAgBG,KAAM,GAC7DsB,EAAMzB,gBAAgBK,WAH3B,IAGwC,GACnCoB,EAAMzB,gBAAgBO,WAE3BkB,EAAMqC,YAAc,eAAC,EAAD,CAASpR,QAAQ,UAAjB,2BAA0C+O,EAAMsC,YAAhD,OAA0E,cAAC,EAAD,CAASrR,QAAQ,SAAjB,8BAIlG,eAACsE,EAAA,EAAUC,KAAX,WACI,gDACA,8BACA,qDACCwK,EAAMf,iBAGNe,EAAMiC,OAAS,eAAC,EAAD,CAAShR,QAAQ,UAAjB,sBAAqC+O,EAAMuC,OAA3C,OAAgE,cAAC,EAAD,CAAStR,QAAQ,SAAjB,yBAIpF,eAACsE,EAAA,EAAUC,KAAX,WACI,6CAC6B,IAA5BwK,EAAMG,WAAWlI,OAAe,cAAC,EAAD,8BAC7B,cAAC1C,EAAA,EAAD,CAAWtE,QAAQ,QAAnB,SACK+O,EAAMG,WAAW5J,KAAI,SAAC2B,EAAM+H,GAAP,OAClB,cAAC1K,EAAA,EAAUC,KAAX,UACI,cAACR,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,cAACC,EAAA,EAAD,CAAOvE,IAAKsH,EAAK9C,MAAOvE,IAAKqH,EAAK7C,KAAMC,OAAK,EAAC6C,SAAO,IACrD,cAAClD,EAAA,EAAD,UACA,cAAC,OAAD,CAAMnE,GAAE,mBAAcoH,EAAKtD,SAA3B,SACKsD,EAAK7C,SAGV,eAACJ,EAAA,EAAD,CAAKC,GAAI,EAAT,UACKgD,EAAK9D,IADV,OACmB8D,EAAKvC,MADxB,OACmCuC,EAAK9D,IAAM8D,EAAKvC,eAV1CsK,gBAqB7C,cAAChL,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACK,EAAA,EAAD,CAAWtE,QAAQ,QAAnB,UACI,cAACsE,EAAA,EAAUC,KAAX,UACI,iDAEJ,cAACD,EAAA,EAAUC,KAAX,UACI,eAACR,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,oBACI,eAACA,EAAA,EAAD,eAAO+K,EAAML,mBAIzB,cAACpK,EAAA,EAAUC,KAAX,UACI,eAACR,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,uBACI,eAACA,EAAA,EAAD,eAAO+K,EAAMJ,sBAIzB,cAACrK,EAAA,EAAUC,KAAX,UACI,eAACR,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,kBACI,eAACA,EAAA,EAAD,eAAO+K,EAAMH,iBAIzB,cAACtK,EAAA,EAAUC,KAAX,UACI,eAACR,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,oBACI,eAACA,EAAA,EAAD,eAAO+K,EAAMF,oBAGvBE,EAAMiC,QACL,eAAC1M,EAAA,EAAUC,KAAX,WACK2L,GAAc,cAAC,EAAD,IACbJ,EACD,cAAC,gBAAD,CAAcyB,OAAQxC,EAAMF,WAAY2C,UA3GnC,SAACC,GAC3BhQ,ENSoB,SAACoO,EAAS4B,GAAV,8CAA4B,WAAMhQ,EAAUuE,GAAhB,uBAAAtE,EAAA,sEAEhDD,EAAS,CACL1B,KAAMwL,KAHsC,EAOZvF,IAAfsD,EAP2B,EAOxCC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,eAAe,mBACfC,cAAc,UAAD,OAAYJ,EAASK,SAZM,SAmB3BhI,IAAMiL,IAAN,sBAAyBiD,EAAzB,QAAwC4B,EAAejI,GAnB5B,gBAmBzC3H,EAnByC,EAmBzCA,KAEPJ,EAAS,CACL1B,KAAMyL,GACN1J,QAASD,IAGbJ,EAAS,CACL1B,KAAM2L,KA3BsC,kDAiChDjK,EAAS,CACL1B,KAAM0L,GACN3J,QAAQ,KAAMC,UACd,KAAMA,SAASF,KAAKG,QACpB,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UAtCsC,0DAA5B,wDMTX0P,CAAa7B,EAAS4B,OAyGG,cAAC,EAAD,OAKlBpB,GAAkB,cAAC,EAAD,IACjB/G,GAAYA,EAASoG,SAAWX,EAAMiC,SAAWjC,EAAMqC,aACxD,eAAC9M,EAAA,EAAUC,KAAX,WACI,cAACzE,EAAA,EAAD,CAAQC,KAAK,SAASL,UAAU,gBAAgB+F,QA7G1C,WAC1BhE,ENkI8B,SAACsN,GAAD,8CAAW,WAAMtN,EAAUuE,GAAhB,yBAAAtE,EAAA,sEAEzCD,EAAS,CACP1B,KAAMkM,KAHiC,EAQrCjG,IADWsD,EAP0B,EAOvCC,UAAaD,SAGTE,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAAYJ,EAASK,SAZG,SAgBlBhI,IAAMiL,IAAN,sBACNmC,EAAM9I,IADA,YAErB,GACAuD,GAnBuC,gBAgBjC3H,EAhBiC,EAgBjCA,KAMRJ,EAAS,CACP1B,KAAMmM,GACNpK,QAASD,IAxB8B,kDA+BzB,kCAJVG,EACJ,KAAMD,UAAY,KAAMA,SAASF,KAAKG,QAClC,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UAEVP,EAAS0H,MAEX1H,EAAS,CACP1B,KAAMoM,GACNrK,QAASE,IApC8B,0DAAX,wDMlIrB2P,CAAuB5C,OA2GhB,mC,UCjGT6C,GAjFQ,SAAC,GAAe,IAAd5O,EAAa,EAAbA,QAEfvB,EAAW4B,cAEXwO,EAAWtO,aAAY,SAAAC,GAAK,OAAIA,EAAMqO,YACrCpO,EAAyBoO,EAAzBpO,QAASC,EAAgBmO,EAAhBnO,MAAOoO,EAASD,EAATC,MAGhBxI,EADW/F,aAAY,SAAAC,GAAK,OAAIA,EAAM+F,aACtCD,SAGSyI,EADGxO,aAAY,SAAAC,GAAK,OAAIA,EAAMwO,cACvCxF,QAIP5I,qBAAW,WAEJ0F,GAAYA,EAASoG,QACpBjO,EZyIa,uCAAM,WAAMA,EAAUuE,GAAhB,uBAAAtE,EAAA,sEAEvBD,EAAS,CACL1B,KAAMsI,KAHa,EAOarC,IAAfsD,EAPE,EAOfC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYJ,EAASK,SAXnB,SAeAhI,IAAMC,IAAI,cAAe4H,GAfzB,gBAef3H,EAfe,EAefA,KAERJ,EAAS,CACL1B,KAAMuI,GACNxG,QAASD,IAnBU,kDAwBvBJ,EAAS,CACL1B,KAAMwI,GACNzG,QAAQ,KAAMC,UACd,KAAMA,SAASF,KAAKG,QACpB,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UA7Ba,0DAAN,yDYtIbgB,EAAQiP,UAAU,YAGvB,CAACxQ,EAAUuB,EAAS+O,IAGvB,IAAMG,EAAgB,SAAC1Q,GAEhByP,OAAOkB,QAAQ,kBACd1Q,EZgKc,SAACD,GAAD,8CAAQ,WAAMC,EAAUuE,GAAhB,mBAAAtE,EAAA,sEAE1BD,EAAS,CACL1B,KAAM0I,KAHgB,EAOUzC,IAAfsD,EAPK,EAOlBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYJ,EAASK,SAXhB,SAeHhI,IAAMyQ,OAAN,qBAA2B5Q,GAAMgI,GAf9B,cAelB3H,KAERJ,EAAS,CACL1B,KAAM2I,KAlBgB,kDAuB1BjH,EAAS,CACL1B,KAAM4I,GACN7G,QAAQ,KAAMC,UACd,KAAMA,SAASF,KAAKG,QACpB,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UA5BgB,0DAAR,wDYhKLqQ,CAAW7Q,KAM5B,OACI,sBAAM9B,UAAU,UAAhB,UACI,uCACC+D,EAAY,cAAC,EAAD,IAAcC,EAAS,cAAC,EAAD,CAAS1D,QAAQ,SAAjB,SAA2B0D,IAC3D,eAAC4O,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAChT,UAAU,WAAnD,UACI,gCACI,+BACI,oCACA,sCACA,uCACA,uCACA,4BAGR,gCACKoS,EAAMxM,KAAI,SAAAiH,GAAI,OACX,+BACI,6BAAKA,EAAKtG,MACV,6BAAKsG,EAAKnI,OACV,6BAAI,mBAAG+M,KAAI,iBAAY5E,EAAK1C,OAAxB,SAAkC0C,EAAK1C,UAC3C,6BACK0C,EAAKmD,QAAY,mBAAGhQ,UAAU,eAAe2C,MAAO,CAACsQ,MAAO,WACzD,mBAAGjT,UAAU,eAAe2C,MAAO,CAACsQ,MAAO,WAGnD,+BACI,cAAC,gBAAD,CAAe9S,GAAE,gBAAW0M,EAAKtG,IAAhB,SAAjB,SACI,cAACnG,EAAA,EAAD,CAAQE,QAAQ,SAASN,UAAU,SAAnC,SACI,mBAAGA,UAAU,oBAGrB,cAACI,EAAA,EAAD,CAAQE,QAAQ,SAASN,UAAU,SAAS+F,QAAS,kBAAKyM,EAAc3F,EAAKtG,MAA7E,SACI,mBAAGvG,UAAU,wBAhBhB6M,EAAKtG,iBCwD3B2M,GAtGe,SAAC,GAAsB,IAArB3P,EAAoB,EAApBA,MAAOD,EAAa,EAAbA,QAE7B6P,EAAS5P,EAAMY,OAAOrC,GAE5B,EAAwB0B,mBAAS,IAAjC,mBAAOkB,EAAP,KAAauG,EAAb,KACA,EAA0BzH,mBAAS,IAAnC,mBAAO2G,EAAP,KAAcC,EAAd,KACA,EAA8B5G,oBAAS,GAAvC,mBAAOwM,EAAP,KAAgBoD,EAAhB,KAIMrR,EAAW4B,cAEXiJ,EAAa/I,aAAY,SAAAC,GAAK,OAAIA,EAAM8I,cACvC7I,EAAwB6I,EAAxB7I,QAASC,EAAe4I,EAAf5I,MAAO6I,EAAQD,EAARC,KAEjBwG,EAAaxP,aAAY,SAAAC,GAAK,OAAIA,EAAMuP,cAC/BC,EAA4DD,EAApEtP,QAA8BwP,EAAsCF,EAA7CrP,MAA4BwP,EAAiBH,EAAzBvG,QAKlD5I,qBAAU,WAEHsP,GACCzR,EAAS,CAAC1B,KAAMmJ,KAChBlG,EAAQ0C,KAAK,iBAGT6G,EAAKnI,MAAQmI,EAAKtG,MAAQ4M,GAI1BlI,EAAQ4B,EAAKnI,MACb0F,EAASyC,EAAK1C,OACdiJ,EAAWvG,EAAKmD,UALhBjO,EAAS4H,GAAcwJ,MAYhC,CAACpR,EAAU8K,EAAMsG,EAAQ7P,EAASkQ,IAWrC,OACA,sBAAKxT,UAAU,UAAf,UACA,cAAC,OAAD,CAAMG,GAAG,eAAT,qBACA,eAAC,GAAD,WACA,2CACCmT,GAAiB,cAAC,EAAD,IACjBC,GAAe,cAAC,EAAD,CAASjT,QAAQ,WAChCyD,EAAU,cAAC,EAAD,IAAYC,EAAQ,cAAC,EAAD,CAAS1D,QAAQ,SAAjB,SAA2B0D,IACtD,eAACoB,EAAA,EAAD,CAAMoF,SAhBY,SAAChF,GACnBA,EAAEiF,iBAEE1I,Eb6KmB,SAAC8K,GAAD,8CAAU,WAAM9K,EAAUuE,GAAhB,uBAAAtE,EAAA,sEAEjCD,EAAS,CACL1B,KAAMgJ,KAHuB,EAOG/C,IAAfsD,EAPY,EAOzBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,gBAAiB,mBACjBC,cAAc,UAAD,OAAYJ,EAASK,SAZT,SAgBVhI,IAAMiL,IAAN,qBAAwBL,EAAKtG,KAAOsG,EAAM/C,GAhBhC,gBAgBzB3H,EAhByB,EAgBzBA,KAERJ,EAAS,CACL1B,KAAMiJ,KAGVvH,EAAS,CACL1B,KAAMiJ,GACNlH,QAAQD,IAxBqB,kDA6BjCJ,EAAS,CACL1B,KAAMkJ,GACNnH,QAAQ,KAAMC,UACd,KAAMA,SAASF,KAAKG,QACpB,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UAlCuB,0DAAV,wDa7KVmR,CAAgB,CAAClN,IAAK4M,EAAQzO,OAAMyF,QAAO6F,cAaxD,UACA,eAAC5K,EAAA,EAAKwF,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,mBACA,cAAC1F,EAAA,EAAKC,QAAN,CACAhF,KAAK,OACL0K,YAAY,aACZvK,MAAOkE,EACPa,SAAU,SAACC,GAAD,OAAOyF,EAAQzF,EAAEC,OAAOjF,aAItC,eAAC4E,EAAA,EAAKwF,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,4BACA,cAAC1F,EAAA,EAAKC,QAAN,CACAhF,KAAK,QACL0K,YAAY,cACZvK,MAAO2J,EACP5E,SAAU,SAACC,GAAD,OAAO4E,EAAS5E,EAAEC,OAAOjF,aAIvC,cAAC4E,EAAA,EAAKwF,MAAN,CAAYC,UAAU,UAAtB,SACI,cAACzF,EAAA,EAAKoJ,MAAN,CACAnO,KAAK,WACLoO,MAAM,WACNC,QAASsB,EACTxP,MAAOwP,EACPzK,SAAU,SAACC,GAAD,OAAO4N,EAAW5N,EAAEC,OAAOiJ,cAIzC,cAACtO,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,UAA9B,8BCxEOoT,GA5BC,SAAC,GAAe,IAAdzP,EAAa,EAAbA,QAEd,OACI,eAACiB,EAAA,EAAD,CAAMlF,UAAU,mBAAhB,UACI,cAAC,OAAD,CAAMG,GAAE,mBAAc8D,EAAQsC,KAA9B,SACI,cAACrB,EAAA,EAAKyO,IAAN,CAAU1T,IAAKgE,EAAQQ,MAAOnE,QAAQ,UAG1C,eAAC4E,EAAA,EAAK0O,KAAN,WACI,cAAC,OAAD,CAAMzT,GAAE,mBAAc8D,EAAQsC,KAAO5D,MAAO,CAACsQ,MAAM,QAASpD,eAAgB,QAA5E,SACI,cAAC3K,EAAA,EAAK2O,MAAN,CAAYvO,GAAG,MAAf,SACK,iCAASrB,EAAQS,WAI1B,cAACQ,EAAA,EAAK4O,KAAN,CAAWxO,GAAG,MAAd,SACI,cAAC,EAAD,CAAQ9E,MAAOyD,EAAQa,OAAQrE,KAAI,UAAKwD,EAAQc,WAAb,gBAGvC,eAACG,EAAA,EAAK4O,KAAN,CAAWxO,GAAG,KAAd,cACMrB,EAAQe,gBCgGf+O,GA3GY,WAEvB,IAAMhS,EAAW4B,cAEXL,EAAU0Q,cAEVnK,EAAYhG,aAAY,SAAAC,GAAK,OAAIA,EAAM+F,aACAD,GAAYC,EAAlD9F,QAAkD8F,EAA7B7F,MAA6B6F,EAAZD,UAEvCqK,EAAoBpQ,aAAY,SAAAC,GAAK,OAAIA,EAAMmQ,qBAC9ClQ,EAA4BkQ,EAA5BlQ,QAASC,EAAmBiQ,EAAnBjQ,MAAOkQ,EAAYD,EAAZC,SAGjBC,EAAgBtQ,aAAY,SAAAC,GAAK,OAAIA,EAAMqQ,iBACOC,GAAyCD,EAA1FpQ,QAA0FoQ,EAAnEnQ,MAAmEmQ,EAAjDrH,SAA+BuH,EAAkBF,EAA1BlQ,QAIvEC,qBAAU,WACNnC,EAAS,CAAC1B,KzBZwB,+ByBc9BuJ,EAASoG,SACT1M,EAAQ0C,KAAK,UAGdoO,EACC9Q,EAAQ0C,KAAR,oBAA0BqO,EAAe9N,IAAzC,UAEAxE,ExBiCqB,uCAAM,WAAOA,EAAUuE,GAAjB,uBAAAtE,EAAA,sEAE/BD,EAAS,CACL1B,KAAMW,IAHqB,EAMKsF,IAAfsD,EANU,EAMvBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAc,UAAD,OAAYJ,EAASK,SAXX,SAeVhI,IAAMC,IAAI,+BAAgC4H,GAfhC,gBAexB3H,EAfwB,EAexBA,KAEPJ,EAAS,CACL1B,KAAMY,EACNmB,QAASD,IAnBkB,kDAwB/BJ,EAAS,CACL1B,KAAMa,EACNkB,QAAQ,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAS,KAAMA,UA1BhE,0DAAN,2DwB7B7B,CAACP,EAAS6H,EAAUwK,EAAeC,EAAgB/Q,IAInD,IAIMgR,EAAuB,SAACxS,GAEnByP,OAAOkB,QAAQ,gBACd1Q,ExBqIkB,SAACD,GAAD,8CAAQ,WAAMC,EAAUuE,GAAhB,mBAAAtE,EAAA,sEAElCD,EAAS,CACL1B,KAAMqB,IAHwB,EAOE4E,IAAfsD,EAPa,EAO1BC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,gBAAiB,mBACjBC,cAAc,UAAD,OAAYJ,EAASK,SAZR,SAgB7BhI,IAAMyQ,OAAN,wBAA8B5Q,GAAMgI,GAhBP,OAmBlC/H,EAAS,CACL1B,KAAMsB,IApBwB,gDA0BlCI,EAAS,CACL1B,KAAMuB,EACNQ,QAAQ,KAAMC,UACd,KAAMA,SAASF,KAAKG,QACpB,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UA/BwB,yDAAR,wDwBrITiS,CAAmBzS,KAMxC,OACI,sBAAM9B,UAAU,UAAhB,UACA,eAACqE,EAAA,EAAD,CAAKrE,UAAU,qBAAf,UACI,cAACsE,EAAA,EAAD,UACA,4CAGA,cAACA,EAAA,EAAD,CAAKtE,UAAU,aAAf,SACA,eAACI,EAAA,EAAD,CAAQJ,UAAU,OAAO+F,QArBJ,WACzBhE,ExBmG0B,uCAAM,WAAMA,EAAUuE,GAAhB,uBAAAtE,EAAA,sEAEhCD,EAAS,CACL1B,KAAMkB,IAHsB,EAOI+E,IAAfsD,EAPW,EAOxBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,gBAAiB,mBACjBC,cAAc,UAAD,OAAYJ,EAASK,SAZV,SAgBThI,IAAMyI,KAAK,iBAAiB,GAAIZ,GAhBvB,gBAgBxB3H,EAhBwB,EAgBxBA,KAGRJ,EAAS,CACL1B,KAAMmB,EACNY,QAAQD,IArBoB,kDA0BhCJ,EAAS,CACL1B,KAAMoB,EACNW,QAAQ,KAAMC,UACd,KAAMA,SAASF,KAAKG,QACpB,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UA/BsB,0DAAN,0DwB/EtB,UACI,mBAAGtC,UAAU,gBADjB,yBAMH+D,EAAY,cAAC,EAAD,IAAcC,EAAS,cAAC,EAAD,CAAS1D,QAAQ,SAAjB,SAA2B0D,IAC/D,eAAC4O,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAChT,UAAU,WAAnD,UACY,gCACI,+BACI,oCACA,sCACA,0CACA,6CACA,uCACA,iDACA,uCACA,2CAGR,gCACKkU,EAAStO,KAAI,SAAA3B,GAAO,OACjB,+BACI,6BAAKA,EAAQsC,MACb,6BAAKtC,EAAQS,OACb,6BAAKT,EAAQuQ,WACb,6BAAKvQ,EAAQgB,cACb,6BAAKhB,EAAQe,QACb,6BAAKf,EAAQkB,eACb,6BAAI,cAACX,EAAA,EAAD,CAAOvE,IAAKgE,EAAQQ,MAAOvE,IAAK+D,EAAQS,KAAMC,OAAK,EAAC/B,MAAM,OAAOC,OAAO,WAC5E,+BACI,cAAC,gBAAD,CAAe1C,GAAE,oBAAe8D,EAAQsC,IAAvB,SAAjB,SACI,cAACnG,EAAA,EAAD,CAAQE,QAAQ,SAASN,UAAU,SAAnC,SACI,mBAAGA,UAAU,oBAGrB,cAACI,EAAA,EAAD,CAAQE,QAAQ,SAASN,UAAU,SAAS+F,QAAS,kBAAMuO,EAAqBrQ,EAAQsC,MAAxF,SACI,mBAAGvG,UAAU,wBAfhBiE,EAAQsC,iB,oBCqE9BkO,GAjJkB,SAAC,GAAsB,IAArBlR,EAAoB,EAApBA,MAAOD,EAAa,EAAbA,QAEhC0D,EAAYzD,EAAMY,OAAOrC,GAE/B,EAAwB0B,mBAAS,IAAjC,mBAAOkB,EAAP,KAAauG,EAAb,KACA,EAAgCzH,mBAAS,IAAzC,mBAAOgR,EAAP,KAAiBE,EAAjB,KACA,EAAsClR,mBAAS,IAA/C,mBAAOyB,EAAP,KAAoB0P,EAApB,KACA,EAA0BnR,mBAAS,IAAnC,mBAAOwB,EAAP,KAAc4P,EAAd,KACA,EAAwCpR,mBAAS,IAAjD,mBAAO2B,EAAP,KAAqB0P,EAArB,KACA,EAA0BrR,mBAAS,CAAC,KAApC,mBAAOiB,EAAP,KAAcqQ,EAAd,KAIM/S,EAAW4B,cAEXC,EAAiBC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,kBAC3CG,EAA2BH,EAA3BG,QAASC,EAAkBJ,EAAlBI,MAAOC,EAAWL,EAAXK,QAEjB8Q,EAAgBlR,aAAY,SAAAC,GAAK,OAAIA,EAAMiR,iBAClCzB,EAA4DyB,EAApEhR,QAA8BwP,EAAsCwB,EAA7C/Q,MAA4BwP,GAAiBuB,EAAzBjI,QAKlD5I,qBAAU,WAEHsP,IACCzR,EAAS,CAAC1B,KAAMiB,IAChBgC,EAAQ0C,KAAK,qBAGT/B,EAAQS,MAAQT,EAAQsC,MAAQS,GAIhCiE,EAAQhH,EAAQS,MAChBgQ,EAAYzQ,EAAQuQ,UACpBG,EAAe1Q,EAAQgB,aACvB2P,EAAS3Q,EAAQe,OACjB6P,EAAgB5Q,EAAQkB,cACxB2P,EAAS7Q,EAAQQ,QARjB1C,EAASF,EAAmBmF,MAerC,CAACjF,EAAUkC,EAAS+C,EAAW1D,EAASkQ,KAc3C,OACA,sBAAKxT,UAAU,UAAf,UACA,cAAC,OAAD,CAAMG,GAAG,mBAAT,qBACA,eAAC,GAAD,WACA,8CACCmT,GAAiB,cAAC,EAAD,IACjBC,GAAe,cAAC,EAAD,CAASjT,QAAQ,WAChCyD,EAAU,cAAC,EAAD,IAAYC,EAAQ,cAAC,EAAD,CAAS1D,QAAQ,SAAjB,SAA2B0D,IAEtD,eAACoB,EAAA,EAAD,CAAMoF,SApBY,SAAChF,GACnBA,EAAEiF,iBAEE1I,EzB0CsB,SAACkC,GAAD,8CAAa,WAAMlC,EAAUuE,GAAhB,uBAAAtE,EAAA,sEAEvCD,EAAS,CACL1B,KAAMc,IAH6B,EAOHmF,IAAfsD,EAPkB,EAO/BC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,gBAAiB,mBACjBC,cAAc,UAAD,OAAYJ,EAASK,SAZH,SAgBhBhI,IAAMiL,IAAN,wBAA2BjJ,EAAQsC,IAAnC,uBAA6DtC,EAAS6F,GAhBtD,gBAgB/B3H,EAhB+B,EAgB/BA,KAGRJ,EAAS,CACL1B,KAAMe,EACNgB,QAAQD,IArB2B,kDA0BvCJ,EAAS,CACL1B,KAAMgB,EACNe,QAAQ,KAAMC,UACd,KAAMA,SAASF,KAAKG,QACpB,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UA/B6B,0DAAb,wDyB1Cb0S,CAAmB,CAACzO,IAAKS,EAAWtC,OAAM8P,WAASvP,cAAYD,QAAMG,eAAaV,YAiB/F,UACA,eAACW,EAAA,EAAKwF,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,mBACA,cAAC1F,EAAA,EAAKC,QAAN,CACAhF,KAAK,OACL0K,YAAY,aACZvK,MAAOkE,EACPa,SAAU,SAACC,GAAD,OAAOyF,EAAQzF,EAAEC,OAAOjF,aAItC,eAAC4E,EAAA,EAAKwF,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACzF,EAAA,EAAK0F,MAAN,uBACA,cAAC1F,EAAA,EAAKC,QAAN,CACAhF,KAAK,OACL0K,YAAY,iBACZvK,MAAOgU,EACPjP,SAAU,SAACC,GAAD,OAAOkP,EAAYlP,EAAEC,OAAOjF,aAI1C,eAAC4E,EAAA,EAAKwF,MAAN,CAAYC,UAAU,cAAtB,UACA,cAACzF,EAAA,EAAK0F,MAAN,0BACI,cAAC1F,EAAA,EAAKC,QAAN,CACAhF,KAAK,OACLoO,MAAM,cACNjO,MAAOyE,EACPM,SAAU,SAACC,GAAD,OAAOmP,EAAenP,EAAEC,OAAOjF,aAI7C,eAAC4E,EAAA,EAAKwF,MAAN,CAAYC,UAAU,QAAtB,UACA,cAACzF,EAAA,EAAK0F,MAAN,oBACI,cAAC1F,EAAA,EAAKC,QAAN,CACAhF,KAAK,SACLoO,MAAM,QACNjO,MAAOwE,EACPO,SAAU,SAACC,GAAD,OAAOoP,EAASpP,EAAEC,OAAOjF,aAIvC,eAAC4E,EAAA,EAAKwF,MAAN,CAAYC,UAAU,iBAAtB,UACA,cAACzF,EAAA,EAAK0F,MAAN,6BACI,cAAC1F,EAAA,EAAKC,QAAN,CACAhF,KAAK,SACLoO,MAAM,iBACNjO,MAAO2E,EACPI,SAAU,SAACC,GAAD,OAAOqP,EAAgBrP,EAAEC,OAAOjF,aAI/C,cAAC4E,EAAA,EAAKwF,MAAN,UACG,cAACpG,EAAA,EAAD,CAAOvE,IAAKgE,EAAQQ,MAAOvE,IAAK+D,EAAQS,KAAMC,OAAK,EAAC/B,MAAM,OAAOC,OAAO,WAG1E,cAACuC,EAAA,EAAKwF,MAAN,UACA,cAAC,KAAD,CAAYqK,UAAW,EAAQC,OAAS,gBAAEC,EAAF,EAAEA,OAAF,OAAcL,EAASK,QAG/D,cAAC/U,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,UAA9B,8BChEO8U,GA1ES,SAAC,GAAiB,IAAf9R,EAAc,EAAdA,QACnBvB,EAAW4B,cAEX0R,EAAYxR,aAAY,SAACC,GAAD,OAAWA,EAAMuR,aACvCtR,EAA2BsR,EAA3BtR,QAASC,EAAkBqR,EAAlBrR,MAAOiJ,EAAWoI,EAAXpI,OAGhBrD,EADU/F,aAAY,SAACC,GAAD,OAAWA,EAAM+F,aACvCD,SAUR,OARA1F,qBAAU,WACJ0F,GAAYA,EAASoG,QACvBjO,EZsJwB,uCAAM,WAAMA,EAAUuE,GAAhB,uBAAAtE,EAAA,sEAE5BD,EAAS,CACL1B,KAAM+L,KAHkB,EAOQ9F,IAAfsD,EAPO,EAOpBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYJ,EAASK,SAXd,SAiBPhI,IAAMC,IAAI,cAAe4H,GAjBlB,gBAiBrB3H,EAjBqB,EAiBrBA,KAEPJ,EAAS,CACL1B,KAAMgM,GACNjK,QAASD,IArBe,kDA0B5BJ,EAAS,CACL1B,KAAMiM,GACNlK,QAAQ,KAAMC,UACd,KAAMA,SAASF,KAAKG,QACpB,KAAMD,SAASF,KAAKG,QACpB,KAAMA,UA/BkB,0DAAN,yDYpJxBgB,EAAQ0C,KAAK,YAEd,CAACjE,EAAUuB,EAASsG,IAGrB,sBAAK5J,UAAU,UAAf,UACE,wCACC+D,EACC,cAAC,EAAD,IACEC,EACF,cAAC,EAAD,CAAS1D,QAAQ,SAAjB,SAA2B0D,IAE3B,eAAC4O,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAAChT,UAAU,WAAnD,UACE,gCACE,+BACE,oCACA,sCACA,sCACA,uCACA,sCACA,2CACA,4BAGJ,gCACGiN,EAAOrH,KAAI,SAACyJ,GAAD,OACV,+BACE,6BAAKA,EAAM9I,MACX,6BAAK8I,EAAMxC,MAAQwC,EAAMxC,KAAKnI,OAC9B,6BAAK2K,EAAMiG,UAAUC,UAAU,EAAG,MAClC,mCAAMlG,EAAMF,cACZ,6BACGE,EAAMiC,OACLjC,EAAMuC,OAAO2D,UAAU,EAAG,IAE1B,mBAAGvV,UAAU,eAAe2C,MAAO,CAAEsQ,MAAO,WAGhD,6BACG5D,EAAMqC,YACLrC,EAAMsC,YAAY4D,UAAU,EAAG,IAE/B,mBAAGvV,UAAU,eAAe2C,MAAO,CAAEsQ,MAAO,WAGhD,6BACE,cAAC,gBAAD,CAAe9S,GAAE,iBAAYkP,EAAM9I,KAAnC,SACE,cAACnG,EAAA,EAAD,CAAQE,QAAQ,QAAQN,UAAU,SAAlC,2BArBGqP,EAAM9I,iBCNdiP,GAvCA,WACb,OACE,mCACC,qBAAKxS,MAAM,kBAAX,SACG,iCACI,qBAAKA,MAAM,YAAX,SACI,sBAAKA,MAAM,6BAAX,UACI,qBAAKA,MAAM,WAAX,SACI,+BACI,6BAAI,mBAAGyO,KAAK,IAAR,yBACJ,6BAAI,mBAAGA,KAAK,IAAR,0BACJ,6BAAI,mBAAGA,KAAK,IAAR,yBAGZ,qBAAKzO,MAAM,WAAX,SACI,+BACI,6BAAI,mBAAGyO,KAAK,IAAR,6BACJ,6BAAI,mBAAGA,KAAK,IAAR,8BACJ,6BAAI,mBAAGA,KAAK,IAAR,qCAGZ,qBAAKzO,MAAM,WAAX,SACI,+BACI,6BAAI,mBAAGyO,KAAK,IAAR,6BACJ,6BAAI,mBAAGA,KAAK,IAAR,mCACJ,6BAAI,mBAAGA,KAAK,IAAR,+BAGZ,qBAAKzO,MAAM,kBAAX,SACI,mBAAGA,MAAM,YAAT,oDCcTyS,GApCI,WACf,IAAM1T,EAAW4B,cAGX+R,EAAc7R,aAAa,SAAAC,GAAK,OAAIA,EAAM4R,eACxC3R,EAA4B2R,EAA5B3R,QAASC,EAAmB0R,EAAnB1R,MAAOkQ,EAAYwB,EAAZxB,SASxB,OAPAhQ,qBAAU,WACNnC,E5BKoB,uCAAM,WAAMA,GAAN,iBAAAC,EAAA,sEAE1BD,EAAS,CACL1B,KAAMK,IAHgB,SAMLuB,IAAMC,IAAI,iBANL,gBAMnBC,EANmB,EAMnBA,KAEPJ,EAAS,CACL1B,KAAMM,EACNyB,QAASD,IAVa,gDAe1BJ,EAAS,CACL1B,KAAMO,EACNwB,QAAQ,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAS,KAAMA,UAjBrE,yDAAN,yD4BHtB,CAACP,IAKC,mCACA,sBAAK/B,UAAU,eAAf,UACA,mDACI+D,EAAY,cAAC,EAAD,IACXC,EAAS,cAAC,EAAD,CAAS1D,QAAQ,SAAjB,SAA2B0D,IACzC,cAACK,EAAA,EAAD,CAAKrE,UAAU,YAAf,SACKkU,EAAStO,KAAI,SAAA3B,GAAO,OACjB,cAACK,EAAA,EAAD,CAAKqR,GAAI,GAAIpR,GAAI,EAAGqR,EAAG,EAAGC,GAAI,EAA9B,SACI,cAAC,GAAD,CAAS5R,QAASA,GAAcA,EAAQsC,MADNtC,EAAQsC,gBClB/CuP,GATI,WACjB,OACE,qCACA,cAAC,EAAD,IACA,cAAC,GAAD,QCoDWC,GApCH,WACV,OAGE,cAAC,gBAAD,UACQ,sBAAK/V,UAAU,MAAf,UACE,cAAC,GAAD,IAGI,eAAC,IAAD,WACM,cAAC,IAAD,CAAOgW,KAAK,IAAIC,OAAK,EAACC,UAAWJ,KACjC,cAAC,IAAD,CAAOE,KAAK,aAAaC,OAAK,EAACC,UAAWC,KAC1C,cAAC,IAAD,CAAOH,KAAK,iBAAiBC,OAAK,EAACC,UAAWhD,KAC9C,cAAC,IAAD,CAAO8C,KAAK,SAASC,OAAK,EAACC,UAAWhM,KACtC,cAAC,IAAD,CAAO8L,KAAK,eAAeC,OAAK,EAACC,UAAWhE,KAC5C,cAAC,IAAD,CAAO8D,KAAK,gBAAgBC,OAAK,EAACC,UAAWd,KAC7C,cAAC,IAAD,CAAOY,KAAK,YAAYC,OAAK,EAACC,UAAWvI,KACzC,cAAC,IAAD,CAAOqI,KAAK,WAAWC,OAAK,EAACC,UAAW7H,KACxC,cAAC,IAAD,CAAO2H,KAAK,cAAcC,OAAK,EAACC,UAAWE,KAC3C,cAAC,IAAD,CAAOJ,KAAK,YAAYC,OAAK,EAACC,UAAWlL,KACzC,cAAC,IAAD,CAAOgL,KAAK,WAAWC,OAAK,EAACC,UAAWvJ,KACxC,cAAC,IAAD,CAAOqJ,KAAK,eAAeE,UAAW7S,IACtC,cAAC,IAAD,CAAO2S,KAAK,kBAAkBE,UAAWG,KACzC,cAAC,IAAD,CAAOL,KAAK,qBAAqBE,UAAWzB,KAC5C,cAAC,IAAD,CAAOuB,KAAK,aAAaE,UAAWI,QAGzC,cAAC,GAAD,UCvCJC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mCCJDQ,GAAc,WAA0D,IAAzDlT,EAAwD,uDAAhD,CAAE+C,UAAU,GAAI+G,gBAAgB,IAAKqJ,EAAW,uCAChF,OAAQA,EAAO5W,MACX,KAAK4F,GACH,IAAMsB,EAAO0P,EAAO7U,QAEd8U,EAAYpT,EAAM+C,UAAUsQ,MAAK,SAAAtR,GAAC,OAAIA,EAAE5B,UAAYsD,EAAKtD,WAE/D,OAAIiT,EACA,6BACOpT,GADP,IAEI+C,UAAW/C,EAAM+C,UAAUjB,KAAI,SAAAC,GAAC,OAAIA,EAAE5B,UAAYiT,EAAUjT,QAAUsD,EAAO1B,OAIjF,6BACO/B,GADP,IAEI+C,UAAU,GAAD,mBAAM/C,EAAM+C,WAAZ,CAAuBU,MAK1C,KAAKrB,GACL,OAAO,6BACApC,GADP,IAEI+C,UAAW/C,EAAM+C,UAAUuQ,QAAO,SAACvR,GAAD,OAAOA,EAAE5B,UAAYgT,EAAO7U,aAIlE,KAAK+D,GACL,OAAO,6BACArC,GADP,IAEI8J,gBAAiBqJ,EAAO7U,UAI5B,KAAKgE,GACD,oCACOtC,GADP,IAEIwK,cAAe2I,EAAO7U,UAG9B,QACI,OAAO0B,ICnCbuT,GAAUC,2BAAgB,CAC5B5B,YCN+B,WAAoC,IAAnC5R,EAAkC,uDAA3B,CAACoQ,SAAU,IAAK+C,EAAW,uCACjE,OAAOA,EAAO5W,MACV,KAAKK,EACD,MAAO,CAACqD,SAAS,EAAMmQ,SAAU,IACrC,KAAKvT,EACD,MAAO,CAACoD,SAAS,EAAOmQ,SAAU+C,EAAO7U,SAC7C,KAAKxB,EACD,MAAO,CAACmD,SAAS,EAAOC,MAAOiT,EAAO7U,SACtC,QACI,OAAO0B,IDFpBF,eCQkC,WAA+C,IAA9CE,EAA6C,uDAAtC,CAACG,QAAU,CAACsT,QAAS,KAAMN,EAAW,uCAChF,OAAOA,EAAO5W,MACV,KAAKQ,EACD,OAAO,cAACkD,SAAS,GAASD,GAC9B,KAAKhD,EACD,MAAO,CAACiD,SAAS,EAAOE,QAASgT,EAAO7U,SAC5C,KAAKrB,EACD,MAAO,CAACgD,SAAS,EAAOC,MAAOiT,EAAO7U,SACtC,QACI,OAAO0B,IDhBnB8C,KAAMoQ,GACNnN,UER4B,WAAwB,IAAvB/F,EAAsB,uDAAf,GAAImT,EAAW,uCACnD,OAAOA,EAAO5W,MACV,KAAKyH,GACD,MAAO,CAAC/D,SAAS,GACrB,KAAKgE,GACD,MAAO,CAAChE,SAAS,EAAO6F,SAAUqN,EAAO7U,SAC7C,KAAK4F,GACD,MAAO,CAACjE,SAAS,EAAOC,MAAOiT,EAAO7U,SAC1C,KAAK6F,GACD,MAAO,GACP,QACI,OAAOnE,IFFnBuH,aEO+B,WAAwB,IAAvBvH,EAAsB,uDAAf,GAAImT,EAAW,uCACtD,OAAOA,EAAO5W,MACV,KAAK6H,GACD,MAAO,CAACnE,SAAS,GACrB,KAAKoE,GACD,MAAO,CAACpE,SAAS,EAAO6F,SAAUqN,EAAO7U,SAC7C,KAAKgG,GACD,MAAO,CAACrE,SAAS,EAAOC,MAAOiT,EAAO7U,SACtC,QACI,OAAO0B,IFfnB8I,WEoB6B,WAAkC,IAAjC9I,EAAgC,uDAAzB,CAAE+I,KAAM,IAAMoK,EAAW,uCAC9D,OAAOA,EAAO5W,MACV,KAAKgI,GACD,OAAO,6BAAIvE,GAAX,IAAkBC,SAAS,IAC/B,KAAKuE,GACD,MAAO,CAACvE,SAAS,EAAO8I,KAAMoK,EAAO7U,SACzC,KAAKmG,GACD,MAAO,CAACxE,SAAS,EAAOC,MAAOiT,EAAO7U,SACtC,QACI,OAAO0B,IF5BnBiJ,kBEiCoC,WAAyB,IAAxBjJ,EAAuB,uDAAhB,GAAKmT,EAAW,uCAC5D,OAAOA,EAAO5W,MACV,KAAKmI,GACD,MAAO,CAACzE,SAAS,GACrB,KAAK0E,GACD,MAAO,CAAC1E,SAAS,EAAO+I,SAAS,EAAMlD,SAAUqN,EAAO7U,SAC5D,KAAKsG,GACD,MAAO,CAAC3E,SAAS,EAAOC,MAAOiT,EAAO7U,SACtC,QACI,OAAO0B,IFzCnBsL,YGb+B,WAAwB,IAAvBtL,EAAsB,uDAAf,GAAImT,EAAW,uCACrD,OAAOA,EAAO5W,MACV,KAAKkL,GACD,MAAO,CAACxH,SAAS,GACrB,KAAKyH,GACD,MAAO,CAACzH,SAAS,EAAO+I,SAAS,EAAMuC,MAAO4H,EAAO7U,SACzD,KAAKqJ,GACD,MAAO,CAAC1H,SAAS,EAAOC,MAAOiT,EAAO7U,SACtC,QACI,OAAO0B,IHKpBwM,aGCgC,WAA4E,IAA3ExM,EAA0E,uDAAnE,CAAEC,SAAS,EAAMyL,WAAY,GAAI5B,gBAAiB,IAAMqJ,EAAW,uCAC3G,OAAOA,EAAO5W,MACV,KAAKqL,GACD,OAAO,6BAAI5H,GAAX,IAAkBC,SAAS,IAC/B,KAAK4H,GACD,MAAO,CAAC5H,SAAS,EAAQsL,MAAO4H,EAAO7U,SAC3C,KAAKwJ,GACD,MAAO,CAAC7H,SAAS,EAAOC,MAAOiT,EAAO7U,SACtC,QACI,OAAO0B,IHTnByM,SGc+B,WAAyB,IAAxBzM,EAAuB,uDAAhB,GAAKmT,EAAW,uCACvD,OAAOA,EAAO5W,MACV,KAAKwL,GACD,MAAO,CACH9H,SAAS,GAEjB,KAAK+H,GACD,MAAO,CAAC/H,SAAS,EAAQ+I,SAAQ,GACrC,KAAKf,GACD,MAAO,CAAChI,SAAS,EAAOC,MAAOiT,EAAO7U,SAC1C,KAAK4J,GACG,MAAO,GACX,QACI,OAAOlI,IH1BnBkJ,WGuDgC,WAAmC,IAAlClJ,EAAiC,uDAA1B,CAAEmJ,OAAO,IAAMgK,EAAW,uCAClE,OAAOA,EAAO5W,MACV,KAAK4L,GACD,MAAO,CACHlI,SAAS,GAEjB,KAAKmI,GACD,MAAO,CAACnI,SAAS,EAAQkJ,OAAQgK,EAAO7U,SAE5C,KAAK+J,GACD,MAAO,CAACpI,SAAS,EAAOC,MAAOiT,EAAO7U,SAEtC,QACI,OAAO0B,IHnEnBqO,SE0C4B,WAAiC,IAAhCrO,EAA+B,uDAAxB,CAACsO,MAAO,IAAK6E,EAAW,uCAC5D,OAAOA,EAAO5W,MACV,KAAKsI,GACD,MAAO,CAAC5E,SAAS,GACrB,KAAK6E,GACD,MAAO,CAAC7E,SAAS,EAAOqO,MAAO6E,EAAO7U,SAC1C,KAAKyG,GACD,MAAO,CAAC9E,SAAS,EAAOC,MAAOiT,EAAO7U,SAC1C,KAAK0G,GACD,MAAO,CAAEsJ,MAAO,IAChB,QACI,OAAOtO,IFpDnBwO,WEyD6B,WAAwB,IAAvBxO,EAAsB,uDAAf,GAAImT,EAAW,uCACpD,OAAOA,EAAO5W,MACV,KAAK0I,GACD,MAAO,CAAChF,SAAS,GACrB,KAAKiF,GACD,MAAO,CAACjF,SAAS,EAAO+I,SAAS,GACrC,KAAK7D,GACD,MAAO,CAAClF,SAAS,EAAOC,MAAOiT,EAAO7U,SACtC,QACI,OAAO0B,IFjEnB0T,QEsE8B,WAAwB,IAAvB1T,EAAsB,uDAAf,GAAImT,EAAW,uCACrD,OAAOA,EAAO5W,MACV,KAAK6I,GACD,MAAO,CAACnF,SAAS,GACrB,KAAKoF,GACD,MAAO,CAACpF,SAAS,EAAO8I,KAAMoK,EAAO7U,SACzC,KAAKgH,GACD,MAAO,CAACrF,SAAS,EAAOC,MAAOiT,EAAO7U,SACtC,QACI,OAAO0B,IF9EnBuP,WEmF6B,WAAgC,IAA/BvP,EAA8B,uDAAvB,CAAE+I,KAAK,IAAKoK,EAAW,uCAC5D,OAAOA,EAAO5W,MACV,KAAKgJ,GACD,MAAO,CAACtF,SAAS,GACrB,KAAKuF,GACD,MAAO,CAACvF,SAAS,EAAO+I,SAAS,GACrC,KAAKvD,GACD,MAAO,CAACxF,SAAS,EAAOC,MAAOiT,EAAO7U,SAC1C,KAAKoH,GACD,MAAM,CACFqD,KAAK,IAET,QACI,OAAO/I,IF/FnBmQ,kBCQmC,WAAoC,IAAnCnQ,EAAkC,uDAA3B,CAACoQ,SAAU,IAAK+C,EAAW,uCACtE,OAAOA,EAAO5W,MACV,KAAKW,EACD,MAAO,CAAC+C,SAAS,EAAMmQ,SAAU,IACrC,KAAKjT,EACD,MAAO,CAAC8C,SAAS,EAAOmQ,SAAU+C,EAAO7U,SAC7C,KAAKlB,EACD,MAAO,CAAC6C,SAAS,EAAOC,MAAOiT,EAAO7U,SACtC,QACI,OAAO0B,IDhBnBiR,cCqBqC,WAAmC,IAAlCjR,EAAiC,uDAA1B,CAAEG,QAAQ,IAAKgT,EAAW,uCACvE,OAAOA,EAAO5W,MACV,KAAKc,EACD,MAAO,CAAC4C,SAAS,GACrB,KAAK3C,EACD,MAAO,CAAC2C,SAAS,EAAO+I,SAAS,GACrC,KAAKzL,EACD,MAAO,CAAC0C,SAAS,EAAOC,MAAOiT,EAAO7U,SAC1C,KAAKd,EACD,MAAO,CACH2C,QAAQ,IAEZ,QACI,OAAOH,IDjCnBqQ,cCsCqC,WAAwB,IAAvBrQ,EAAsB,uDAAf,GAAImT,EAAW,uCAC5D,OAAOA,EAAO5W,MACV,KAAKkB,EACD,MAAO,CAACwC,SAAS,GACrB,KAAKvC,EACD,MAAO,CAACuC,SAAS,EAAO+I,SAAS,EAAM7I,QAASgT,EAAO7U,SAC3D,KAAKX,EACD,MAAO,CAACsC,SAAS,EAAOC,MAAOiT,EAAO7U,SAC1C,KAAKd,EACD,MAAO,GAEP,QACI,OAAOwC,IDjDnB2T,cCuDqC,WAAwB,IAAvB3T,EAAsB,uDAAf,GAAImT,EAAW,uCAC5D,OAAOA,EAAO5W,MACV,KAAKqB,EACD,MAAO,CAACqC,SAAS,GACrB,KAAKpC,EACD,MAAO,CAACoC,SAAS,EAAO+I,SAAS,GACrC,KAAKlL,EACD,MAAO,CAACmC,SAAS,EAAOC,MAAOiT,EAAO7U,SACtC,QACI,OAAO0B,ID/DnBuR,UGiEiC,WAAmC,IAAlCvR,EAAiC,uDAA1B,CAAEmJ,OAAO,IAAMgK,EAAW,uCACnE,OAAOA,EAAO5W,MACV,KAAK+L,GACD,MAAO,CACHrI,SAAS,GAEjB,KAAKsI,GACD,MAAO,CAACtI,SAAS,EAAQkJ,OAAQgK,EAAO7U,SAE5C,KAAKkK,GACD,MAAO,CAACvI,SAAS,EAAOC,MAAOiT,EAAO7U,SAEtC,QACI,OAAO0B,IH7EnB4M,aGqBoC,WAAyB,IAAxB5M,EAAuB,uDAAf,GAAImT,EAAW,uCAC5D,OAAQA,EAAO5W,MACb,KAAKkM,GACH,MAAO,CACLxI,SAAS,GAEb,KAAKyI,GACH,MAAO,CACLzI,SAAS,EACT+I,SAAS,GAEb,KAAKL,GACH,MAAO,CACL1I,SAAS,EACTC,MAAOiT,EAAO7U,SAElB,KAAKsK,GACH,MAAO,GACT,QACE,OAAO5I,MHrCT4T,GAAuBlR,aAAamR,QAAQ,aAAejR,KAAKkR,MAAMpR,aAAamR,QAAQ,cAAgB,GAC3GE,GAAsBrR,aAAamR,QAAQ,YAAcjR,KAAKkR,MAAMpR,aAAamR,QAAQ,aAAe,KAKxGG,GAAe,CACjBlR,KAAM,CAACC,UAAW6Q,GAAsB9J,gBALTpH,aAAamR,QAAQ,mBAAqBjR,KAAKkR,MAAMpR,aAAamR,QAAQ,oBAAsB,GAK1CrJ,cAJxD9H,aAAamR,QAAQ,iBAAmBjR,KAAKkR,MAAMpR,aAAamR,QAAQ,kBAAoB,MAKzH9N,UAAW,CAACD,SAAUiO,KAIpBE,GAAa,CAACC,MAILC,GAFDC,uBAAab,GAASS,GAAcK,+BAAoBC,mBAAe,WAAf,EAAmBL,MIvCzFM,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFjH,SAASuH,eAAe,SAM1BhC,M","file":"static/js/main.47f69e8d.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\n\n\n\n\nconst Header = () => {\n\n    \n      return (\n        <>\n           <div className=\"main-header-div\">\n              <div className='left-header'>\n                 <img src=\"/img/header-img-four.jpeg\" alt=\"\" />\n              </div>\n              <div className=\"right-header\">\n                <img src=\"/img/item-listed.png\" alt=\"\" />\n                <LinkContainer to='/#homescreen'><Button type='submit' variant='primary'>Shop Now</Button></LinkContainer>\n              </div>\n           </div>\n        </>\n      )\n  }\n\nexport default Header\n\n","import React from 'react'\n\n\nconst Rating = ({value, text}) => {\n    return (\n        <div className='rating'>\n            <i className={\n                value >= 1 \n                ? \"fas fa-star\" \n                : value >= .5\n                ? 'fas fa-star-half-alt' \n                : 'far fa-star'}/>\n\n               <i \n                className={\n                    value >= 2 \n                    ? 'fas fa-star' \n                    : value >= 1.5\n                    ? 'fas fa-star-half-alt' \n                    : 'far fa-star'}\n                    ></i>\n            \n                \n                <i \n                className={\n                    value >= 3 \n                    ? 'fas fa-star' \n                    : value >= 2.5\n                    ? 'fas fa-star-half-alt' \n                    : 'far fa-star'}\n                    ></i>\n            \n                \n                <i \n                className={\n                    value >= 4 \n                    ? \"fas fa-star\" \n                    : value >= 3.5\n                    ? 'fas fa-star-half-alt' \n                    : 'far fa-star'}\n                    ></i>\n            \n                \n                <i \n                className={\n                    value >= 5 \n                    ? 'fas fa-star' \n                    : value >= 4.5\n                    ? 'fas fa-star-half-alt' \n                    : 'far fa-star'}\n                    ></i>\n\n                {text && text}\n                \n\n        </div>\n    )\n}\n\nexport default Rating\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\n\nexport const ADMIN_PRODUCT_LIST_REQUEST = 'ADMIN_PRODUCT_LIST_REQUEST'\nexport const ADMIN_PRODUCT_LIST_SUCCESS = 'ADMIN_PRODUCT_LIST_SUCCESS'\nexport const ADMIN_PRODUCT_LIST_FAIL = 'ADMIN_PRODUCT_LIST_FAIL'\n\nexport const ADMIN_UPDATE_PRODUCT_REQUEST = 'ADMIN_UPDATE_PRODUCT_REQUEST'\nexport const ADMIN_UPDATE_PRODUCT_SUCCESS = 'ADMIN_UPDATE_PRODUCT_SUCCESS'\nexport const ADMIN_UPDATE_PRODUCT_FAIL = 'ADMIN_UPDATE_PRODUCT_FAIL'\nexport const ADMIN_UPDATE_PRODUCT_RESET = 'ADMIN_UPDATE_PRODUCT_RESET'\n\nexport const ADMIN_CREATE_PRODUCT_REQUEST = 'ADMIN_CREATE_PRODUCT_REQUEST'\nexport const ADMIN_CREATE_PRODUCT_SUCCESS = 'ADMIN_CREATE_PRODUCT_SUCCESS'\nexport const ADMIN_CREATE_PRODUCT_FAIL = 'ADMIN_CREATE_PRODUCT_FAIL'\nexport const ADMIN_CREATE_PRODUCT_RESET = 'ADMIN_CREATE_PRODUCT_RESET'\n\nexport const ADMIN_DELETE_PRODUCT_REQUEST = 'ADMIN_DELETE_PRODUCT_REQUEST'\nexport const ADMIN_DELETE_PRODUCT_SUCCESS = 'ADMIN_DELETE_PRODUCT_SUCCESS'\nexport const ADMIN_DELETE_PRODUCT_FAIL = 'ADMIN_DELETE_PRODUCT_FAIL'\n","import axios from 'axios'\nimport { \n    PRODUCT_LIST_REQUEST, \n    PRODUCT_LIST_SUCCESS, \n    PRODUCT_LIST_FAIL, \n    PRODUCT_DETAILS_REQUEST, \n    PRODUCT_DETAILS_SUCCESS, \n    PRODUCT_DETAILS_FAIL,\n    ADMIN_PRODUCT_LIST_REQUEST,\n    ADMIN_PRODUCT_LIST_FAIL,\n    ADMIN_PRODUCT_LIST_SUCCESS,\n    ADMIN_UPDATE_PRODUCT_REQUEST,\n    ADMIN_UPDATE_PRODUCT_SUCCESS,\n    ADMIN_UPDATE_PRODUCT_FAIL,\n    ADMIN_CREATE_PRODUCT_REQUEST,\n    ADMIN_CREATE_PRODUCT_FAIL,\n    ADMIN_CREATE_PRODUCT_SUCCESS,\n    ADMIN_DELETE_PRODUCT_REQUEST,\n    ADMIN_DELETE_PRODUCT_SUCCESS,\n    ADMIN_DELETE_PRODUCT_FAIL\n} from '../constants/productConstants'\n\nexport const listProducts = () => async dispatch => {\n    try {\n        dispatch({\n            type: PRODUCT_LIST_REQUEST,\n        })\n\n        const {data} = await axios.get('/api/products')\n\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data,\n\n        })\n    } catch (error) {\n\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload:error.response && error.response.data.message ? error.response.data.message :error.message,\n        })\n        \n\n        \n    }\n\n}\n\n\nexport const listProductDetails = (id) => async dispatch => {\n    try {\n        dispatch({\n            type: PRODUCT_DETAILS_REQUEST,\n        })\n\n        const {data} = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data,\n\n        })\n    } catch (error) {\n\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload:error.response && error.response.data.message ? error.response.data.message :error.message,\n        })\n        \n\n        \n    }\n\n}\n\nexport const adminListProducts = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ADMIN_PRODUCT_LIST_REQUEST,\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.get('/api/products/admin/products', config)\n\n        dispatch({\n            type: ADMIN_PRODUCT_LIST_SUCCESS,\n            payload: data,\n\n        })\n    } catch (error) {\n\n        dispatch({\n            type: ADMIN_PRODUCT_LIST_FAIL,\n            payload:error.response && error.response.data.message ? error.response.data.message :error.message,\n        })\n        \n\n        \n    }\n\n}\n\n\n\nexport const adminUpdateProduct = (product) => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: ADMIN_UPDATE_PRODUCT_REQUEST\n\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-Ttype': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/products/${product._id}/admin-edit-product`, product, config)\n\n\n        dispatch({\n            type: ADMIN_UPDATE_PRODUCT_SUCCESS,\n            payload:data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ADMIN_UPDATE_PRODUCT_FAIL,\n            payload:error.response && \n            error.response.data.message ? \n            error.response.data.message :\n            error.message,\n        })\n        \n    }\n}\n\n\nexport const adminCreateProduct = () => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: ADMIN_CREATE_PRODUCT_REQUEST\n\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-Ttype': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post('/api/products/',{}, config)\n\n\n        dispatch({\n            type: ADMIN_CREATE_PRODUCT_SUCCESS,\n            payload:data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ADMIN_CREATE_PRODUCT_FAIL,\n            payload:error.response && \n            error.response.data.message ? \n            error.response.data.message :\n            error.message,\n        })\n        \n    }\n}\n\n\n\n\nexport const adminDeleteProduct = (id) => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: ADMIN_DELETE_PRODUCT_REQUEST\n\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-Ttype': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n       await axios.delete(`/api/products/${id}`, config)\n\n\n        dispatch({\n            type: ADMIN_DELETE_PRODUCT_SUCCESS,\n           \n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ADMIN_DELETE_PRODUCT_FAIL,\n            payload:error.response && \n            error.response.data.message ? \n            error.response.data.message :\n            error.message,\n        })\n        \n    }\n}\n\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n       <Spinner\n       animation='border'\n       role='status'\n       style={{\n           width:'100px',\n           height:'100px',\n           margin:'auto',\n           display:'block',\n       }}\n       >\n           <span class='sr-only'>Loading...</span>\n       </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport {Alert} from'react-bootstrap'\n\nconst Message = ({variant, children}) => {\n    return (\n        <Alert variant = {variant}>\n            {children}\n        </Alert>\n    )\n}\n\nMessage.defaultProps ={\n    variant:'info'\n}\n\nexport default Message\n","import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport { Container, Row, Col, Image, ListGroup, Card, Button, Form} from 'react-bootstrap'\nimport Rating from '../Components/Rating'\nimport { listProductDetails } from '../actions/productActions'\n import Loader from '../loader'\n import Message from '../message'\n\n\n\nconst Productscreen = ({history, match}) => {\n   const [qty, setQty] = useState(1)\n\n\n    const dispatch = useDispatch()\n\n    \n    \n    const productDetails = useSelector( state => state.productDetails)\n    const { loading, error, product} = productDetails\n    \n   \n\n    useEffect(() => {\n        dispatch(listProductDetails(match.params.id))\n    },[dispatch, match])\n\n    \n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n\n    }\n\n\n    return (\n        <div className='screens'><Container >\n            <Link className='btn btn-dark my-3' to='/'>Go Back</Link>\n            {loading ? ( <Loader/> )\n           : error ? (<Message variant='danger'>{error}</Message>) : (\n            <Row>\n            <Col md={6}>\n                <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n                <ListGroup variant='flush'>\n                    <ListGroup.Item>\n                        <h3>{product.name}</h3>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`}/>\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        Price: ${product.price}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                       Description:{product.description}\n                    </ListGroup.Item>\n                </ListGroup>\n            </Col>\n            <Col md={3}>\n                <Card variant='flush'>\n                    <ListGroup  variant='flush'>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Pirce:</Col>\n                                <Col><strong>{product.price}</strong></Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Status:</Col>\n                                <Col>{product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}</Col>\n                            </Row>\n                        </ListGroup.Item>\n                        {\n                            product.countInStock > 0 && (\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Qty</Col>\n                                        <Col>\n                                        <Form.Control as='select' value={qty} onChange={(e) => {\n                                           setQty(e.target.value)}}>\n                                               {\n                                                   [...Array(product.countInStock).keys()].map(x => (\n                                                       <option key={x + 1} value={x + 1}>\n                                                           {x + 1 }\n                                                       </option>\n                                                   ))\n                                               }\n                                           </Form.Control>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            )\n                        }\n                        <ListGroup.Item>\n                            <Button className='btn-block' type='button' disabled={product.countInStock === 0} onClick={addToCartHandler}>Add To Cart</Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n           )}\n\n       \n\n\n        </Container></div>\n    )\n}\n\nexport default Productscreen\n"," export const CART_ADD_ITEM = 'CART_ADD_ITEM'\n export const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\n export const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\n export const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","import axios from 'axios'\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload:{\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload:id\n    })\n\nlocalStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload:data\n    })\n\nlocalStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload:data\n    })\n\nlocalStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n\n\n","import React, {useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Row, Col, ListGroup, Image, Form, Button, Card} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Message from '../message'\nimport Loader from '../loader'\nimport {addToCart, removeFromCart} from '../actions/cartActions'\n\nconst CartScreen = ({match, location, history}) => {\nconst productId = match.params.id\n\nconst qty = location.search ? Number(location.search.split('=')[1]) : 1\n\nconst dispatch = useDispatch()\n\n//get current state from readux store\n\nconst cart  = useSelector(state => state.cart)\n\nconst { cartItems } = cart\n\n\n//fire off or call addToCart action\n\nuseEffect(() => {\n    if (productId) {\n        dispatch(addToCart(productId, qty))\n        \n    } else {\n        \n    }\n\n},[dispatch, productId, qty])\n\nconst removeFromCartHandler = (id) =>{\n    dispatch(removeFromCart(id))\n}\n\nconst checkOutHandler = () => {\n    history.push('/login?redirect=shipping')\n}\n    return (\n        <div className='screens'>\n        <Row >\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? (<Message>Your cart is empty <Link to='/'> Go Back</Link></Message> ):(\n                    <ListGroup variant='flush'>\n                        {cartItems.map(item => (\n                        <ListGroup.Item key={item.product}>\n                            <Row>\n                                <Col md={2}>\n                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                </Col>\n                                <Col md={3}>\n                                 <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                </Col>\n                                <Col md={2}>${item.price}</Col>\n                                <Col md={2}>\n                                <Form.Control as='select' value={item.qty} onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\n                                        {\n                                            [...Array(item.countInStock).keys()].map(x => (\n                                                <option key={x + 1} value={x + 1}>\n                                                    {x + 1 }\n                                                </option>\n                                                   ))\n                                        }\n                                </Form.Control>\n                                </Col>\n                                <Col md={2}>\n                                    <Button type='button' variant='light'\n                                    onClick={() => removeFromCartHandler(item.product)}>\n                                       <p>x</p>\n                                    </Button>\n                                </Col>\n                            </Row>\n\n                        </ListGroup.Item>))}\n                    </ListGroup>\n                )}\n            </Col>\n            <Col md ={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                        <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                        ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n                    <ListGroup.Item>\n                        <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkOutHandler}>\n                            Proceed to Checkout\n                        </Button>\n                    </ListGroup.Item>\n                </Card>\n            </Col>\n        </Row>\n\n        </div>\n    )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col} from 'react-bootstrap'\n\nconst FormContainer = ({children}) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\n\nexport const USER_REGISTER_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_DETAIL_REQUEST = 'USER_DETAIL_REQUEST'\nexport const USER_DETAIL_SUCCESS = 'USER_DETAIL_SUCCESS'\nexport const USER_DETAIL_FAIL = 'USER_DETAIL_FAIL'\n\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_PROFILE_REQUEST = 'USER_LIST_PROFILE_REQUEST'\nexport const USER_LIST_PROFILE_SUCCESS = 'USER_LIST_PROFILE_SUCCESS'\nexport const USER_LIST_PROFILE_FAIL = 'USER_LIST_PROFILE_FAIL'\nexport const USER_LIST_PROFILE_RESET = 'USER_LIST_PROFILE_RESET'\n\nexport const USER_REMOVE_PROFILE_REQUEST = 'USER_GET_PROFILE_REQUEST'\nexport const USER_REMOVE_PROFILE_SUCCESS = 'USER_GET_PROFILE_SUCCESS'\nexport const USER_REMOVE_PROFILE_FAIL = 'USER_GET_PROFILE_FAIL'\n\n\nexport const USER_GET_PROFILE_REQUEST = 'USER_GET_PROFILE_REQUEST'\nexport const USER_GET_PROFILE_SUCCESS = 'USER_GET_PROFILE_SUCCESS'\nexport const USER_GET_PROFILE_FAIL = 'USER_GET_PROFILE_FAIL'\n\nexport const UPDATE_USER_PROFILE_REQUEST = 'UPDATE_USER_PROFILE_REQUEST'\nexport const UPDATE_USER_PROFILE_SUCCESS = 'UPDATE_USER_PROFILE_SUCCESS'\nexport const UPDATE_USER_PROFILE_FAIL = 'UPDATE_USER_PROFILE_FAIL'\nexport const UPDATE_USER_PROFILE_RESET = 'UPDATE_USER_PROFILE_RESET'\n","import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAIL_REQUEST, USER_DETAIL_SUCCESS, USER_DETAIL_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_REQUEST, USER_LIST_PROFILE_REQUEST, USER_LIST_PROFILE_SUCCESS, USER_LIST_PROFILE_FAIL, USER_LIST_PROFILE_RESET, USER_REMOVE_PROFILE_REQUEST, USER_REMOVE_PROFILE_SUCCESS, USER_REMOVE_PROFILE_FAIL, USER_GET_PROFILE_REQUEST, UPDATE_USER_PROFILE_FAIL, UPDATE_USER_PROFILE_SUCCESS, UPDATE_USER_PROFILE_REQUEST, USER_GET_PROFILE_SUCCESS, USER_GET_PROFILE_FAIL } from \"../constants/userConstants\"\nimport axios from \"axios\"\n\nexport const login = (email, password) => async(dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n\n        const { data } = await axios.post('/api/users/login', {email, password}, config)\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:error.response && \n            error.response.data.message ? \n            error.response.data.message :\n            error.message,\n        })\n        \n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch(\n        {\n            type: USER_LOGOUT\n        }\n    )\n\n    dispatch(\n        {\n            type: USER_LIST_PROFILE_RESET\n        }\n    )\n}\n\nexport const register = (name, email, password) => async(dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n\n        const { data } = await axios.post('/api/users', {name, email, password}, config)\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload:error.response && \n            error.response.data.message ? \n            error.response.data.message :\n            error.message,\n        })\n        \n    }\n}\n\n\nexport const getUserDetail = (id) => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAIL_REQUEST\n\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(`/api/users/${id}`, config)\n\n        dispatch({\n            type: USER_DETAIL_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAIL_FAIL,\n            payload:error.response && \n            error.response.data.message ? \n            error.response.data.message :\n            error.message,\n        })\n        \n    }\n}\n\nexport const updateUserProfile = (user) => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put('/api/users/profile', user, config)\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload:error.response && \n            error.response.data.message ? \n            error.response.data.message :\n            error.message,\n        })\n        \n    }\n}\n\n\nexport const listUsers = () => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_PROFILE_REQUEST\n\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get('/api/users/', config)\n\n        dispatch({\n            type: USER_LIST_PROFILE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_PROFILE_FAIL,\n            payload:error.response && \n            error.response.data.message ? \n            error.response.data.message :\n            error.message,\n        })\n        \n    }\n}\n\nexport const deleteUser = (id) => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_REMOVE_PROFILE_REQUEST\n\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(`/api/users/${id}`, config)\n\n        dispatch({\n            type: USER_REMOVE_PROFILE_SUCCESS\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_REMOVE_PROFILE_FAIL,\n            payload:error.response && \n            error.response.data.message ? \n            error.response.data.message :\n            error.message,\n        })\n        \n    }\n}\n\n\n\nexport const adminUpdateUser = (user) => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: UPDATE_USER_PROFILE_REQUEST\n\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-Ttype': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n        dispatch({\n            type: UPDATE_USER_PROFILE_SUCCESS\n        })\n\n        dispatch({\n            type: UPDATE_USER_PROFILE_SUCCESS,\n            payload:data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_PROFILE_FAIL,\n            payload:error.response && \n            error.response.data.message ? \n            error.response.data.message :\n            error.message,\n        })\n        \n    }\n}","import React, {useState, useEffect} from 'react'\nimport {Link, Redirect} from 'react-router-dom'\nimport { Form, Button, Row, Col} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Message from '../message.js'\nimport Loader from '../loader.js'\nimport FormContainer from '../Components/FormContainer'\nimport {login} from '../actions/userActions'\n\n\nconst LoginScreen = ({location, history}) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {loading, error, userInfo} = userLogin\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() =>{\n        if(userInfo){\n            history.push(redirect)\n        }\n\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        dispatch(login(email, password))\n\n    }\n\n    return <div className='screens'><FormContainer>\n        <h1>LOGIN</h1>\n        {error && <Message variant='danger'>{error}</Message>}\n        {loading && <Loader/>}\n        <Form onSubmit={submitHandler}>\n            <Form.Group controlId='email'>\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>LOGIN</Button>\n        </Form>\n\n        <Row className='py-3'>\n            <Col>\n            New Customer{''}\n            <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Sign up</Link>\n            </Col>\n        </Row>\n\n\n    </FormContainer></div>\n}\nexport default LoginScreen\n","import React, {useState, useEffect} from 'react'\nimport {Link, Redirect} from 'react-router-dom'\nimport { Form, Button, Row, Col} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Message from '../message.js'\nimport Loader from '../loader.js'\nimport FormContainer from '../Components/FormContainer'\nimport {register} from '../actions/userActions'\n\n\n\nconst RegisterScreen = ({location, history}) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userRegister = useSelector(state => state.userRegister)\n    const {loading, error, userInfo} = userRegister\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() =>{\n        if(userInfo){\n            history.push(redirect)\n        }\n\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else{\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return <div className='screens'><FormContainer>\n        <h1>REGISTER</h1>\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {loading && <Loader/>}\n        <Form onSubmit={submitHandler}>\n            <Form.Group controlId='email'>\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='confirmPassword'>\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                type='password'\n                placeholder='Confirm password'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>REGISTER</Button>\n        </Form>\n\n        <Row className='py-3'>\n            <Col>\n            Have an account? {''}\n            <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>LOGIN</Link>\n            </Col>\n        </Row>\n\n\n    </FormContainer></div>\n}\nexport default RegisterScreen\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDERS_GET_REQUEST = 'ORDERS_GET_REQUEST'\nexport const ORDERS_GET_SUCCESS = 'ORDERS_GET_SUCCESS'\nexport const ORDERS_GET_FAIL = 'ORDERS_GET_FAIL'\n\nexport const ADMIN_ORDERS_GET_REQUEST = 'ADMIN_ORDERS_GET_REQUEST'\nexport const ADMIN_ORDERS_GET_SUCCESS = 'ADMIN_ORDERS_GET_SUCCESS'\nexport const ADMIN_ORDERS_GET_FAIL = 'ADMIN_ORDERS_GET_FAIL'\n\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import React, {useState, useEffect} from 'react'\nimport { Form, Button, Row, Col} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Message from '../message.js'\nimport Loader from '../loader.js'\nimport {getUserDetail, updateUserProfile} from '../actions/userActions'\nimport { getUserOrders} from '../actions/orderActions'\n\n\n\nconst ProfileScreen = ({history}) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userDetail = useSelector(state => state.userDetail)\n    const {loading, error, user} = userDetail\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const {success} = userUpdateProfile\n\n    const userOrders = useSelector(state => state.userOrders)\n    const {loading:loadingOrders, error: errorLoading, orders} = userOrders\n\n\n    useEffect(() =>{\n\n        \n\n        if(!userInfo){\n            history.push('/login')\n        } else{\n            if(!user.name){\n                dispatch(getUserDetail('profile'))\n                dispatch(getUserOrders())\n            }else{\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n\n    }, [dispatch, history, userInfo, user])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(password !== confirmPassword) {\n            setMessage('Passwords do not match')\n        } else{\n            dispatch(updateUserProfile({id: user._id, name, email, password }))\n        }\n\n    }\n\n    return <div className='screens'><Row>\n        <Col md={3}>\n\n        <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading && <Loader/>}\n        <Form onSubmit={submitHandler}>\n            <Form.Group controlId='email'>\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='confirmPassword'>\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                type='password'\n                placeholder='Confirm password'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>UPDATE</Button>\n        </Form>\n\n        </Col>\n\n        <Col md={9}>\n            <h2>My Orders</h2>\n        </Col>\n    </Row></div>\n}\n\nexport default ProfileScreen","import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, \n    ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, \n    ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_RESET, ORDER_PAY_FAIL, ORDERS_GET_REQUEST, ORDERS_GET_SUCCESS, ORDERS_GET_FAIL, ADMIN_ORDERS_GET_REQUEST, ADMIN_ORDERS_GET_SUCCESS, ADMIN_ORDERS_GET_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL } from \"../constants/orderConstants\";\nimport axios from 'axios'\nimport {logout} from './userActions'\nexport const createOrder = (order) => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post('/api/orders', order, config)\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload:error.response && \n            error.response.data.message ? \n            error.response.data.message :\n            error.message,\n        })\n        \n    }\n}\n\n\n\n\nexport const getOrderDetails = (id) => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n\n    \n\n        const {data} = await axios.get(`/api/orders/${id}`, config)\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload:error.response && \n            error.response.data.message ? \n            error.response.data.message :\n            error.message,\n        })\n        \n    }\n\n}\n\nexport const updateToPaid = (orderId, paymentResult) => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                'Content-Type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n\n    \n\n        const {data} = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: ORDER_PAY_RESET\n\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload:error.response && \n            error.response.data.message ? \n            error.response.data.message :\n            error.message,\n        })\n        \n    }\n\n}\n\n\nexport const getUserOrders = () => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDERS_GET_REQUEST\n\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n\n\n        const {data} = await axios.get('/api/orders/myorders', config)\n\n        dispatch({\n            type: ORDERS_GET_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDERS_GET_FAIL,\n            payload:error.response && \n            error.response.data.message ? \n            error.response.data.message :\n            error.message,\n        })\n        \n    }\n\n}\n\n\n\nexport const adminGetOrders = () => async(dispatch, getState) => {\n    try {\n        dispatch({\n            type: ADMIN_ORDERS_GET_REQUEST\n\n        })\n\n        const { userLogin: { userInfo } } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n\n\n        const {data} = await axios.get('/api/orders', config)\n\n        dispatch({\n            type: ADMIN_ORDERS_GET_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ADMIN_ORDERS_GET_FAIL,\n            payload:error.response && \n            error.response.data.message ? \n            error.response.data.message :\n            error.message,\n        })\n        \n    }\n\n}\n\n\n\nexport const updateOrderToDelivered = (order) => async(dispatch, getState) => {\n    try {\n        dispatch({\n          type: ORDER_DELIVER_REQUEST,\n        })\n    \n        const {\n          userLogin: { userInfo },\n        } = getState()\n    \n        const config = {\n          headers: {\n            Authorization: `Bearer ${userInfo.token}`,\n          },\n        }\n    \n        const { data } = await axios.put(\n          `/api/orders/${order._id}/deliver`,\n          {},\n          config\n        )\n    \n        dispatch({\n          type: ORDER_DELIVER_SUCCESS,\n          payload: data,\n        })\n      } catch (error) {\n        const message =\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message\n        if (message === 'Not authorized, token failed') {\n          dispatch(logout())\n        }\n        dispatch({\n          type: ORDER_DELIVER_FAIL,\n          payload: message,\n        })\n      }\n}\n\n\n\n\n\n","import React from 'react'\nimport {Nav} from 'react-bootstrap'\nimport {LinkContainer} from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({step1, step2, step3, step4 }) => {\n    return (\n        <Nav className='justify-content-center md-4'>\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Sign In</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Sign In</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Shipping</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Payment</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Place Order</Nav.Link>\n                )}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, {useState} from 'react'\nimport { Form, Button} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport FormContainer from '../Components/FormContainer'\nimport { saveShippingAddress } from '../actions/cartActions'\nimport CheckoutSteps from '../Components/CheckoutSteps'\n\nconst ShippingScreen = ({history}) => {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress} = cart\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const dispatch = useDispatch()\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({address, city, postalCode, country}))\n        history.push('/payment')\n    }\n\n\n    return <FormContainer className='screens'>\n\n        <CheckoutSteps step1 step2/>\n        <h1>Shipping</h1>\n        <Form onSubmit={submitHandler}>\n            <Form.Group controlId='address'>\n                <Form.Label>Address</Form.Label>\n                <Form.Control\n                 type='Address'\n                 placeholder='Enter Address'\n                 value={address}\n                 onChange={(e) => setAddress(e.target.value)}>\n                 </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='city'>\n                <Form.Label>City</Form.Label>\n                <Form.Control\n                 type='City'\n                 placeholder='Enter City'\n                 value={city}\n                 onChange={(e) => setCity(e.target.value)}>\n                 </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='postal code'>\n                <Form.Label>Postal Code</Form.Label>\n                <Form.Control\n                 type='Postal Code'\n                 placeholder='Enter Postal Code'\n                 value={postalCode}\n                 onChange={(e) => setPostalCode(e.target.value)}>\n                 </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='country'>\n                <Form.Label>Country</Form.Label>\n                <Form.Control\n                 type='Country'\n                 placeholder='Enter Country'\n                 value={country}\n                 onChange={(e) => setCountry(e.target.value)}>\n                 </Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n                Continue\n            </Button>\n        </Form>\n    </FormContainer>\n}\n\nexport default ShippingScreen\n","import React, {useState} from 'react'\nimport { Form, Button, Col} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport FormContainer from '../Components/FormContainer'\nimport { savePaymentMethod } from '../actions/cartActions'\nimport CheckoutSteps from '../Components/CheckoutSteps'\n\nconst PaymentScreen = ({history}) => {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress} = cart\n\n    if(!shippingAddress){\n        history.push('/shipping')\n    }\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n    \n\n    const dispatch = useDispatch()\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n\n    return <div className='screens'><FormContainer>\n\n        <CheckoutSteps step1 step2 step3/>\n        <h1>Payment Methos</h1>\n        <Form onSubmit={submitHandler}>\n            <Form.Group controlId='address'>\n                <Form.Label as='legend'>Select Method</Form.Label>\n            \n            <Col>\n            <Form.Check \n            type='radio' \n            label='PayPal or Credit Card' \n            id='PayPal'\n            name='paymentMethod' \n            value='PayPal' \n            checked \n            onChange={(e) => setPaymentMethod(e.target.value)}>\n            </Form.Check>\n            </Col>\n            </Form.Group>\n\n            \n            <Button type='submit' variant='primary'>\n                Continue\n            </Button>\n        </Form>\n    </FormContainer></div>\n}\n\nexport default PaymentScreen","import React, {useEffect} from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Message from '../message'\nimport CheckoutSteps from '../Components/CheckoutSteps'\nimport { Link} from 'react-router-dom'\nimport {createOrder} from '../actions/orderActions'\n\nconst PlaceOrserScreen = ({history}) => {\n    const dispatch = useDispatch()\n    const cart = useSelector(state => state.cart)\n\n\n    //calculate prices\n    const addDecimals = (num) => {\n        return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    cart.itemsPrice = addDecimals (cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\n    cart.shippingPrice = addDecimals (cart.itemsPrice > 100 ? 0 : 100)\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, success, error } = orderCreate\n\n    useEffect(() => {\n        if(success) {\n            history.push(`/order/${order._id}`)\n        }\n\n        // eslint-disable-next-line\n    }, [history, success])\n\n\n    const placeOrderHandler = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n\n        }))\n    }\n    return (\n        <div className='screens'>\n         <CheckoutSteps step1 step2 step3 step4/>\n         <Row>\n             <Col md={8}>\n                 <ListGroup variant='flush'>\n                     <ListGroup.Item>\n                         <h2>Shipping</h2>\n                         <p>\n                             <strong>Address:</strong>\n                             {cart.shippingAddress.address}, {cart.shippingAddress.city}{''}\n                             {cart.shippingAddress.postalCode},{''}\n                             {cart.shippingAddress.country}\n                        </p>\n                     </ListGroup.Item>\n\n                     <ListGroup.Item>\n                         <h2>Payment Method</h2>\n                         <strong>Payment Method:</strong>\n                         {cart.paymentMethod}\n                     </ListGroup.Item>\n\n                     <ListGroup.Item>\n                         <h2>Order Items</h2>\n                         {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\n                             <ListGroup variant='flush'>\n                                 {cart.cartItems.map((item, index) => (\n                                     <ListGroup.Item key={index}>\n                                         <Row>\n                                             <Col md={1}>\n                                                 <Image src={item.image} alt={item.name} fluid rounded />\n                                                 <Col>\n                                                 <Link to={`/product/${item.product}`}>\n                                                     {item.name}\n                                                 </Link>\n                                                 </Col>\n                                                 <Col md={4}>\n                                                     {item.qty} x ${item.price} = ${item.qty * item.price}\n                                                 </Col>\n                                             </Col>\n                                         </Row>\n                                     </ListGroup.Item>\n                                 ))}\n                             </ListGroup>\n                         )} \n                     </ListGroup.Item>\n                 </ListGroup>\n             </Col>\n             <Col md={4}>\n                 <ListGroup variant='flush'>\n                     <ListGroup.Item>\n                         <h2>Order Summary</h2>\n                     </ListGroup.Item>\n                     <ListGroup.Item>\n                         <Row>\n                             <Col>Items</Col>\n                                 <Col>${cart.itemsPrice}</Col>\n                         </Row>\n                     </ListGroup.Item>\n\n                     <ListGroup.Item>\n                         <Row>\n                             <Col>Shipping</Col>\n                                 <Col>${cart.shippingPrice}</Col>\n                         </Row>\n                     </ListGroup.Item>\n\n                     <ListGroup.Item>\n                         <Row>\n                             <Col>Tax</Col>\n                                 <Col>${cart.taxPrice}</Col>\n                         </Row>\n                     </ListGroup.Item>\n\n                     <ListGroup.Item>\n                         <Row>\n                             <Col>Total</Col>\n                                 <Col>${cart.totalPrice}</Col>\n                         </Row>\n                     </ListGroup.Item>\n\n                     <ListGroup.Item>\n                                 {error && <Message variant='danger'>{error}</Message>}\n                     </ListGroup.Item>\n                     <ListGroup.Item>\n                        <Button type='button' className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>Place Order</Button>\n                     </ListGroup.Item>\n                 </ListGroup>\n             </Col>\n         </Row>\n            \n        </div>\n    )\n}\n\nexport default PlaceOrserScreen\n","import React from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Link} from 'react-router-dom';\nimport {NavDropdown, Nav} from 'react-bootstrap'\nimport {logout} from '../actions/userActions'\nimport {LinkContainer} from 'react-router-bootstrap'\n\n\n\nconst Navbar = (props) => {\n    const {totalItems} = props;\n    return (\n        <div>\n            <Navtop totalItems={totalItems}/>\n            <NavBottom/>\n        </div>\n    )\n}\n\nexport default Navbar\n\nexport const Navtop = (props) => {\n\n    const dispatch = useDispatch()\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    const {totalItems} = props;\n\n    const logoutHandler = () => {\n       dispatch(logout())\n    }\n\n\n    return (\n        <div className=\"nav-top-container\">\n            <div className='logo-img'>\n                   <img src=\"/img/mainlogo.png\" alt=\"she got it all logo\"/>\n            </div>\n\n           <div className=\"H-A-B\">\n                <ul>\n                   <div className=\"bag-img\">\n                        <Link to='/cart' style={{ textDecoration: 'none' }}>\n                            <img  src=\"img/shopping-bag.png\" alt=\"\"/> {totalItems}\n                        </Link>\n                  </div>\n\n             \n                  <Link to='/'  style={{ textDecoration: 'none' }}>\n                        <li>HOME</li>\n                  </Link>\n                  <li>ABOUT</li>\n            \n\n                  \n                  {userInfo ? \n                          (<NavDropdown title={userInfo.name} id='username'>\n                              <LinkContainer to='/profile'>\n                                 <NavDropdown.Item>Profile</NavDropdown.Item>\n                              </LinkContainer>\n                              <NavDropdown.Item onClick={logoutHandler}>\n                                  Logout\n                              </NavDropdown.Item>\n                          </NavDropdown>) : (<LinkContainer to='/login'  style={{ textDecoration: 'none' }}>\n                              <Nav.Link><li>LOGIN</li></Nav.Link>\n                         </LinkContainer>)}\n\n                          {userInfo && userInfo.isAdmin &&\n                              (<NavDropdown title=\"Admin Menu\" id='adminmenu'>\n                                  <LinkContainer to='/admin/users'>\n                                      <NavDropdown.Item>Users</NavDropdown.Item>\n                                  </LinkContainer>\n\n                                  <LinkContainer to='/admin/products'>\n                                      <NavDropdown.Item>Products</NavDropdown.Item>\n                                  </LinkContainer>\n      \n                                  <LinkContainer to='/admin/orders'>\n                                      <NavDropdown.Item>Orders</NavDropdown.Item>\n                                  </LinkContainer>   \n                             </NavDropdown>\n                    )}\n\n                </ul> \n        \n               {/** <div className=\"hamburger-menu\">\n                       <a href=\"#\"><img src=\"img/hamburger-menu.png\" alt=\"\"/></a>\n                </div> */}\n           </div>\n        </div>\n    );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const NavBottom = () => {\n    return (\n        <div className=\"nav-categories-div nav-bottom-container\">\n            <ul>\n            <NavDropdown title=\"EYE\" id='nav-text'>\n                <LinkContainer to='/admin/users'>\n                    <NavDropdown.Item>Eye Palattes</NavDropdown.Item>\n                </LinkContainer>\n\n                <LinkContainer to='/admin/products'>\n                    <NavDropdown.Item>Eyelashes</NavDropdown.Item>\n                </LinkContainer>\n      \n                <LinkContainer to='/admin/orders'>\n                    <NavDropdown.Item>Mascara</NavDropdown.Item>\n                </LinkContainer>   \n            </NavDropdown>\n\n\n            <NavDropdown title=\"LIP\" id='nav-text'>\n                <LinkContainer to='/admin/users'>\n                    <NavDropdown.Item>Lipstick</NavDropdown.Item>\n                </LinkContainer>\n\n                <LinkContainer to='/admin/products'>\n                    <NavDropdown.Item>Lip Gloss</NavDropdown.Item>\n                </LinkContainer>\n      \n                <LinkContainer to='/admin/orders'>\n                    <NavDropdown.Item>Lip liner</NavDropdown.Item>\n                </LinkContainer>   \n            </NavDropdown>\n\n\n            <NavDropdown title=\"FACE\" id='nav-text'>\n                <LinkContainer to='/admin/users'>\n                    <NavDropdown.Item>Foundation</NavDropdown.Item>\n                </LinkContainer>\n\n                <LinkContainer to='/admin/products'>\n                    <NavDropdown.Item>Concealer</NavDropdown.Item>\n                </LinkContainer>\n      \n                <LinkContainer to='/admin/orders'>\n                    <NavDropdown.Item>Contour</NavDropdown.Item>\n                </LinkContainer>   \n            </NavDropdown>\n\n\n            <NavDropdown title=\"BRUSHES\" id='nav-text'>\n                <LinkContainer to='/admin/users'>\n                    <NavDropdown.Item>Brush sets</NavDropdown.Item>\n                </LinkContainer>\n\n                <LinkContainer to='/admin/products'>\n                    <NavDropdown.Item>Sponges</NavDropdown.Item>\n                </LinkContainer>\n      \n                <LinkContainer to='/admin/orders'>\n                    <NavDropdown.Item>Brush cleaner</NavDropdown.Item>\n                </LinkContainer>   \n            </NavDropdown>\n\n            </ul>\n        </div>\n    )\n}","import React, { useState,useEffect} from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card} from 'react-bootstrap'\nimport {PayPalButton} from 'react-paypal-button-v2'\nimport axios from 'axios'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Message from '../message'\nimport Loader from '../loader'\nimport { Link} from 'react-router-dom'\nimport {getOrderDetails, updateToPaid,updateOrderToDelivered} from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nconst OrderDetailsScreen = ({match}) => {\n\n    const orderId = match.params.id\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const dispatch = useDispatch()\n\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, loading, error } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading:loadingPay, success:successPay } = orderPay\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading:loadingDeliver, success:successDeliver } = orderDeliver\n\n    if(!loading) {\n        const addDecimals = (num) => {\n            return (Math.round(num * 100) / 100).toFixed(2)\n        }\n    \n        order.itemsPrice = addDecimals (order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0))\n    }\n\n\n    useEffect(() => {\n\n        const addPayPalScript = async () => {\n            const {data: clientId} = await axios.get('/api/config/paypal')\n            const script = document.createElement('script')\n            script.type = 'text/javascript'\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n            script.async = true\n            script. onload = () => {\n                setSdkReady(true)\n            }\n\n            document.body.appendChild(script)\n        }\n\n\n        if(!order || order._id !== orderId || successPay || successDeliver ){\n            dispatch({type: ORDER_PAY_RESET})\n            dispatch({type: ORDER_DELIVER_RESET})\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid){\n            if(!window.paypal){\n                addPayPalScript()\n            }else{\n                setSdkReady(true)\n            }\n        }\n      \n    }, [dispatch, orderId, order, successPay])\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(updateToPaid(orderId, paymentResult))\n\n    }\n\n    const successDeliverHandler = () => {\n        dispatch(updateOrderToDelivered(order))\n\n    }\n\n\nreturn loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : <div className='screens'>\n\n<h1>Order {order._id}</h1>\n<Row>\n             <Col md={8}>\n                 <ListGroup variant='flush'>\n                     <ListGroup.Item>\n                         <h2>Shipping</h2>\n\n                         <p><strong>Name: </strong> {order.user.name}</p>\n                         <p>\n                             <strong>Email: </strong> {' '}\n                             <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                         <p>\n                             <strong>Address:</strong>\n                             {order.shippingAddress.address}, {order.shippingAddress.city}{''}\n                             {order.shippingAddress.postalCode},{''}\n                             {order.shippingAddress.country}\n                        </p>\n                        {order.isDelivered ? <Message variant='success'> Delivered on {order.deliveredAt} </Message> : <Message variant='danger'>Not Delivered</Message>}\n                         \n                     </ListGroup.Item>\n\n                     <ListGroup.Item>\n                         <h2>Payment Method</h2>\n                         <p>\n                         <strong>Payment Method:</strong>\n                         {order.paymentMethod}\n                         </p>\n\n                         {order.isPaid ? <Message variant='success'> Paid on {order.paidAt} </Message> : <Message variant='danger'>Not Paid</Message>}\n                         \n                     </ListGroup.Item>\n\n                     <ListGroup.Item>\n                         <h2>Order Items</h2>\n                         {order.orderItems.length === 0 ? <Message> Order is empty</Message> : (\n                             <ListGroup variant='flush'>\n                                 {order.orderItems.map((item, index) => (\n                                     <ListGroup.Item key={index}>\n                                         <Row>\n                                             <Col md={1}>\n                                                 <Image src={item.image} alt={item.name} fluid rounded />\n                                                 <Col>\n                                                 <Link to={`/product/${item.product}`}>\n                                                     {item.name}\n                                                 </Link>\n                                                 </Col>\n                                                 <Col md={4}>\n                                                     {item.qty} x ${item.price} = ${item.qty * item.price}\n                                                 </Col>\n                                             </Col>\n                                         </Row>\n                                     </ListGroup.Item>\n                                 ))}\n                             </ListGroup>\n                         )} \n                     </ListGroup.Item>\n                 </ListGroup>\n             </Col>\n             <Col md={4}>\n                 <ListGroup variant='flush'>\n                     <ListGroup.Item>\n                         <h2>Order Summary</h2>\n                     </ListGroup.Item>\n                     <ListGroup.Item>\n                         <Row>\n                             <Col>Items</Col>\n                                 <Col>${order.itemsPrice}</Col>\n                         </Row>\n                     </ListGroup.Item>\n\n                     <ListGroup.Item>\n                         <Row>\n                             <Col>Shipping</Col>\n                                 <Col>${order.shippingPrice}</Col>\n                         </Row>\n                     </ListGroup.Item>\n\n                     <ListGroup.Item>\n                         <Row>\n                             <Col>Tax</Col>\n                                 <Col>${order.taxPrice}</Col>\n                         </Row>\n                     </ListGroup.Item>\n\n                     <ListGroup.Item>\n                         <Row>\n                             <Col>Total</Col>\n                                 <Col>${order.totalPrice}</Col>\n                         </Row>\n                     </ListGroup.Item>\n                     {!order.isPaid && (\n                        <ListGroup.Item>\n                            {loadingPay && <Loader/> }\n                            {!sdkReady ? (<Loader/>) : \n                            (<PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler}/>)}\n\n                        </ListGroup.Item>)}\n\n                       {loadingDeliver && <Loader/>}\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                        <ListGroup.Item>\n                            <Button type='button' className='btn btn-block' onClick={successDeliverHandler}/>\n                            Mark as delivered\n                        </ListGroup.Item>)}\n                     \n                 </ListGroup>\n             </Col>\n         </Row>\n\n</div>\n\n}\n\nexport default OrderDetailsScreen","import React ,{useState, useEffect}from 'react'\nimport { Table, Button} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {LinkContainer} from 'react-router-bootstrap'\nimport Message from '../message'\nimport Loader from '../loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = ({history}) => {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const {loading, error, users} = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const {success: successDelete} = userDelete\n\n\n\n    useEffect( () => {\n\n        if(userInfo && userInfo.isAdmin){\n            dispatch(listUsers())\n\n        } else{\n            history.pushState('/login')\n        }\n\n    }, [dispatch, history, successDelete])\n\n\n    const deleteHandler = (id) => {\n\n        if(window.confirm('Are you sure?')){\n            dispatch(deleteUser(id))\n\n        }\n        \n    }\n\n    return (\n        < div className='screens'>\n            <h1>Users</h1>\n            {loading ? ( <Loader/> ) : error ? (<Message variant='danger'>{error}</Message>) : (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>NAME</th>\n                            <th>EMAIL</th>\n                            <th>ADMIN</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {users.map(user => (\n                            <tr key={user._id}>\n                                <td>{user._id}</td>\n                                <td>{user.name}</td>\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\n                                <td>\n                                    {user.isAdmin ? ( <i className='fas fa-check' style={{color: 'green'}}></i>) :\n                                      ( <i className='fas fa-times' style={{color: 'red'}}></i>\n                                      )}\n                                </td>\n                                <td>\n                                    <LinkContainer to={`/user/${user._id}/edit`}>\n                                        <Button variant='danger' className='btn-sm'>\n                                            <i className='fas fa-edit'></i>\n                                        </Button>\n                                    </LinkContainer>\n                                    <Button variant='danger' className='btn-sm' onClick={()=> deleteHandler(user._id)}>\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                </td>\n                            </tr>\n\n                        ))}\n                    </tbody>\n                </Table>\n            )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","import React, {useState, useEffect} from 'react'\nimport { Form, Button,} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Message from '../message.js'\nimport Loader from '../loader.js'\nimport {adminGetUser, getUserDetail, adminUpdateUser} from '../actions/userActions'\nimport FormContainer from '../Components/FormContainer.js'\nimport { UPDATE_USER_PROFILE_RESET } from '../constants/userConstants.js'\n\n\n\n\n\nconst AdminUpdateUserScreen = ({match, history}) => {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n    \n\n\n    const dispatch = useDispatch()\n\n    const userDetail = useSelector(state => state.userDetail)\n    const {loading, error, user} = userDetail\n\n    const updateUser = useSelector(state => state.updateUser)\n    const {loading:loadingUpdate, error: errorUpdate, success:successUpdate} = updateUser\n\n   \n\n\n    useEffect(() =>{\n\n        if(successUpdate){\n            dispatch({type: UPDATE_USER_PROFILE_RESET})\n            history.push('/admin/users')\n        } else{\n\n            if(!user.name || user._id !== userId){\n                dispatch(getUserDetail(userId))\n            } else {\n    \n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n    \n            }\n\n        }\n        \n    \n    }, [dispatch, user, userId, history, successUpdate])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        \n            dispatch(adminUpdateUser({_id: userId, name, email, isAdmin}))\n        \n\n    }\n\n    return (\n    <div className='screens'>\n    <Link to='/admin/users'>Go back</Link>\n    <FormContainer> \n    <h1>Edit User</h1>\n    {loadingUpdate && <Loader/>}\n    {errorUpdate && <Message variant='danger'/>}\n    {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\n        <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n            type='name'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='isAdmin'>\n            <Form.Check\n            type='checkbox'\n            label='Is Admin'\n            checked={isAdmin}\n            value={isAdmin}\n            onChange={(e) => setIsAdmin(e.target.checked)}\n            ></Form.Check>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>UPDATE</Button>\n        </Form>\n        \n        )}   \n\n    </FormContainer>\n     \n    </div>\n\n)}\n\nexport default AdminUpdateUserScreen","import React from 'react'\nimport Rating from '../Components/Rating'\nimport {Card} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\nconst Product = ({product}) => {\n    \n    return (\n        <Card className='my-3 p-3 rounded'>\n            <Link to={`/product/${product._id}`}>\n                <Card.Img src={product.image} variant='top'/>\n            </Link>\n\n            <Card.Body>\n                <Link to={`/product/${product._id}`} style={{color:'black', textDecoration: 'none'}}>\n                    <Card.Title as='div'>\n                         <strong>{product.name}</strong>\n                    </Card.Title>\n                </Link>\n\n                <Card.Text as='div'>\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n                </Card.Text>\n\n                <Card.Text as='h4'>\n                    ${product.price}\n                </Card.Text>\n\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n\n\n{/*  <Link to={`/product/${product._id}`}>\n\n                <Card.Img src={product.image} variant='top'/>\n                \n            </Link>\n */}\n","import React ,{useState, useEffect}from 'react'\nimport { Table,Container, Row, Col, Image, ListGroup, Card, Button, Form} from 'react-bootstrap'\nimport {Link, useHistory} from 'react-router-dom'\nimport Rating from '../Components/Rating'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Product from '../Components/Product'\nimport {LinkContainer} from 'react-router-bootstrap'\nimport Message from '../message'\nimport Loader from '../loader'\nimport {adminCreateProduct, adminListProducts, adminDeleteProduct} from '../actions/productActions'\nimport { ADMIN_CREATE_PRODUCT_RESET } from '../constants/productConstants'\n\n\n\nconst ProductsListScreen = () => {\n\n    const dispatch = useDispatch()\n\n    const history = useHistory()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {loading:userLoading, error:userError, userInfo} = userLogin\n\n    const adminProductsList = useSelector(state => state.adminProductsList)\n    const {loading, error, products} = adminProductsList\n\n\n    const createProduct = useSelector(state => state.createProduct)\n    const {loading:createLoading, error:createError,success:successCreate, product:createdProduct} = createProduct\n\n    \n\n    useEffect(() => {\n        dispatch({type:ADMIN_CREATE_PRODUCT_RESET})\n\n        if(!userInfo.isAdmin){\n            history.push('/login')\n        }\n\n        if(successCreate){\n            history.push(`/products/${createdProduct._id}/edit`)\n        } else{\n            dispatch(adminListProducts())\n        }\n        \n    },\n    [dispatch,userInfo, successCreate, createdProduct, history])\n\n\n\n    const createProductHandler = () => {\n        dispatch(adminCreateProduct())\n    }\n\n    const deleteProductHandler = (id) => {\n      \n            if(window.confirm('Areyou sure')){\n                dispatch(adminDeleteProduct(id))\n            }\n    \n    }\n\n\n    return (\n        < div className='screens'>\n        <Row className='align-items-center'>\n            <Col>\n            <h1>Products</h1>\n            </Col>\n\n            <Col className='text-right'>\n            <Button className='my-3' onClick={createProductHandler}>\n                <i className='fas fa-plus'></i> CreateProduct\n            </Button>\n            </Col>\n\n        </Row>\n        {loading ? ( <Loader/> ) : error ? (<Message variant='danger'>{error}</Message>) : (\n        <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>NAME</th>\n                            <th>CATEGORY</th>\n                            <th>DESCRIPTION</th>\n                            <th>PRICE</th>\n                            <th>CCOUNT-IN-STCOK</th>\n                            <th>IMAGE</th>\n                            <th>EDIT</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {products.map(product => (\n                            <tr key={product._id}>\n                                <td>{product._id}</td>\n                                <td>{product.name}</td>\n                                <td>{product.category}</td>\n                                <td>{product.description}</td>\n                                <td>{product.price}</td>\n                                <td>{product.countInStock}</td>\n                                <td><Image src={product.image} alt={product.name} fluid width='50px' height='50px' /></td>\n                                <td>\n                                    <LinkContainer to={`/products/${product._id}/edit`}>\n                                        <Button variant='danger' className='btn-sm'>\n                                            <i className='fas fa-edit'></i>\n                                        </Button>\n                                    </LinkContainer>\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteProductHandler(product._id)}>\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                </td>\n                            </tr>\n\n                        ))}\n                    </tbody>\n                </Table>\n                )}\n        </div>\n    )\n}\n\nexport default ProductsListScreen\n","import React, {useState, useEffect} from 'react'\nimport { Form, Button, Col, Image, InputGroup, Input, FormControl, } from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Message from '../message.js'\nimport Loader from '../loader.js'\nimport {adminGetUser, getUserDetail, adminUpdateUser} from '../actions/userActions'\nimport FormContainer from '../Components/FormContainer.js'\nimport { ADMIN_UPDATE_PRODUCT_RESET } from '../constants/productConstants.js'\nimport { listProductDetails, adminUpdateProduct } from '../actions/productActions.js'\nimport FileBase64 from 'react-filebase64'\n\n\n\n\n\n\nconst AdminUpdateProductScreen = ({match, history}) => {\n\n    const productId = match.params.id\n\n    const [name, setName] = useState('')\n    const [category, setCategory] = useState('')\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState('')\n    const [countInStock, setCountInStock] = useState('')\n    const [image, setImage] = useState([''])\n    \n\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const {loading, error, product} = productDetails\n\n    const updateProduct = useSelector(state => state.updateProduct)\n    const {loading:loadingUpdate, error: errorUpdate, success:successUpdate} = updateProduct\n\n   \n\n\n    useEffect(() =>{\n\n        if(successUpdate){\n            dispatch({type: ADMIN_UPDATE_PRODUCT_RESET})\n            history.push('/admin/products/')\n        } else{\n\n            if(!product.name || product._id !== productId){\n                dispatch(listProductDetails(productId))\n            } else {\n    \n                setName(product.name)\n                setCategory(product.category)\n                setDescription(product.description)\n                setPrice(product.price)\n                setCountInStock(product.countInStock)\n                setImage(product.image)\n    \n            }\n\n        }\n        \n    \n    }, [dispatch, product, productId, history, successUpdate])\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        \n            dispatch(adminUpdateProduct({_id: productId, name, category,description,price,countInStock,image}))    \n\n    }\n\n    const changeImageHandler = () => {\n\n    }\n\n    return (\n    <div className='screens'>\n    <Link to='/admin/products/'>Go back</Link>\n    <FormContainer> \n    <h1>Edit Product</h1>\n    {loadingUpdate && <Loader/>}\n    {errorUpdate && <Message variant='danger'/>}\n    {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\n\n        <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n            type='name'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='category'>\n            <Form.Label>Category</Form.Label>\n            <Form.Control\n            type='text'\n            placeholder='Enter category'\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n            ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='description'>\n        <Form.Label>Description</Form.Label>\n            <Form.Control\n            type='text'\n            label='Description'\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='price'>\n        <Form.Label>Price</Form.Label>\n            <Form.Control\n            type='number'\n            label='Price'\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n            ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='count in stock'>\n        <Form.Label>Count In Stock</Form.Label>\n            <Form.Control\n            type='number'\n            label='Count in stock'\n            value={countInStock}\n            onChange={(e) => setCountInStock(e.target.value)}\n            ></Form.Control>\n        </Form.Group>\n\n       <Form.Group>\n          <Image src={product.image} alt={product.name} fluid width='50px' height='50px'/>\n       </Form.Group>\n       \n        <Form.Group>\n        <FileBase64 multiple={ false } onDone={ ({base64}) => setImage(base64)} />\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>UPDATE</Button>\n\n        </Form>\n        \n        )}  \n\n    \n\n    </FormContainer>\n\n    \n     \n    </div>\n\n)}\n\nexport default AdminUpdateProductScreen","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../message'\nimport Loader from '../loader'\nimport { adminGetOrders } from '../actions/orderActions'\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector((state) => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(adminGetOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n  return (\n    <div className='screens'>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  )\n}\n\nexport default OrderListScreen","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <>\n     <div class=\"main-footer-div\">\n        <footer>\n            <div class=\"container\">\n                <div class=\"row justify-content-center\">\n                    <div class=\"col item\">\n                        <ul>\n                            <li><a href=\"#\">Our story</a></li>\n                            <li><a href=\"#\">Contact Us</a></li>\n                            <li><a href=\"#\">Blog</a></li>\n                        </ul>\n                    </div>\n                    <div class=\"col item\">\n                        <ul>\n                            <li><a href=\"#\">Refund policy</a></li>\n                            <li><a href=\"#\">Privacy policy</a></li>\n                            <li><a href=\"#\">Terms of service</a></li>\n                        </ul>\n                    </div>\n                    <div class=\"col item\">\n                        <ul>\n                            <li><a href=\"#\">Birthday club</a></li>\n                            <li><a href=\"#\">Become an affiliate</a></li>\n                            <li><a href=\"#\">My account</a></li>\n                        </ul>\n                    </div>\n                    <div class=\"col item social\">\n                        <p class=\"copyright\">She Got It All © 2022</p>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    </div>\n    </>\n  )\n}\n\nexport default Footer","import React, {useEffect} from 'react'\nimport { useDispatch, useSelector} from 'react-redux'\nimport Product from '../Components/Product'\nimport {Row, Col} from 'react-bootstrap'\nimport {listProducts}from '../actions/productActions'\nimport Loader from '../loader'\nimport Message from '../message'\n\n\nconst Homescreen = () => {\n    const dispatch = useDispatch()\n\n\n    const productList = useSelector( state => state.productList)\n    const { loading, error, products} = productList\n\n    useEffect(() => {\n        dispatch(listProducts())\n       \n    },[dispatch])\n\n   \n\n    return (\n        < >\n        <div className=\"main-hms-div\">\n        <h1>Featured Products</h1>\n           {loading ? ( <Loader/> )\n           : error ? (<Message variant='danger'>{error}</Message>) : (\n        <Row className='hms-cards'>\n            {products.map(product =>(\n                <Col sm={12} md={6} l={4} xl={3} key={product._id}>\n                    <Product product={product} key={product._id}/>\n                </Col>\n            ))}\n        </Row>\n           ) }\n        </div>\n           \n\n            \n        </>\n    )\n}\n\nexport default Homescreen\n\n\n","import React from 'react'\nimport Header from '../Components/Header'\nimport Homescreen from './Homescreen'\n\nconst MainScreen = () => {\n  return (\n    <>\n    <Header/>\n    <Homescreen/>\n    </>\n  )\n}\n\nexport default MainScreen","import React from 'react'\nimport './App.css'\nimport Header from './Components/Header'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Productscreen from './screens/Productscreen';\nimport cartScreen from './screens/cartScreen'\nimport LoginScreen from './screens/loginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport Navbar from './Components/Navbar';\nimport orderDetailsScreen from './screens/OrderDetailsScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport AdminUpdateUserScreen from './screens/AdminUpdateUserScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport AdminUpdateProductScreen from './screens/AdminUpdateProductScreen'\nimport OrderListScreen from './screens/OrderListScreen';\nimport Footer from './Components/Footer';\nimport MainScreen from './screens/MainScreen';\n\n\n\nconst App = () => {\n  return (\n\n\n    <Router>\n            <div className=\"App\">\n              <Navbar/>\n             \n               \n                  <Switch>\n                        <Route path='/' exact component={MainScreen}/>\n                        <Route path='/order/:id' exact component={orderDetailsScreen}/>\n                        <Route path='/user/:id/edit' exact component={AdminUpdateUserScreen}/>\n                        <Route path='/login' exact component={LoginScreen}/>\n                        <Route path='/admin/users' exact component={UserListScreen}/>\n                        <Route path='/admin/orders' exact component={OrderListScreen}/>\n                        <Route path='/shipping' exact component={ShippingScreen}/>\n                        <Route path='/payment' exact component={PaymentScreen}/>\n                        <Route path='/placeorder' exact component={PlaceOrderScreen}/>\n                        <Route path='/register' exact component={RegisterScreen}/>\n                        <Route path='/profile' exact component={ProfileScreen}/>\n                        <Route path='/product/:id' component={Productscreen}/>\n                        <Route path='/admin/products' component={ProductListScreen}/>\n                        <Route path='/products/:id/edit' component={AdminUpdateProductScreen}/>\n                        <Route path='/cart/:id?' component={cartScreen}/>\n                   </Switch>\n\n                   <Footer/>\n                   \n        \n            </div>\n        </Router>\n  \n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {  CART_ADD_ITEM } from '../constants/cartConstants'\nimport {  CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS,CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\n\nexport const cartReducer = (state = { cartItems:[], shippingAddress:{}}, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n          const item = action.payload \n          \n          const existItem = state.cartItems.find(x => x.product === item.product)\n  \n          if (existItem) {\n              return{\n                  ...state,\n                  cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n              }\n              \n          } else {\n              return{\n                  ...state,\n                  cartItems: [...state.cartItems, item]\n              }\n  \n          }\n          \n        case CART_REMOVE_ITEM:\n        return {\n            ...state,\n            cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n\n        }\n\n        case CART_SAVE_SHIPPING_ADDRESS:\n        return {\n            ...state,\n            shippingAddress: action.payload,\n\n        }\n\n        case CART_SAVE_PAYMENT_METHOD:\n            return{\n                ...state,\n                paymentMethod: action.payload\n            }\n    \n        default:\n            return state\n    }\n}\n\nexport default cartReducer\n","import {combineReducers, applyMiddleware} from 'redux'\nimport {createStore} from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport {productListReducer, productDetailsReducer, adminProductListReducer, adminUpdateProductReducer, adminCreateProductReducer, adminDeleteProductReducer} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer, userRegisterReducer, userDetailReducer, userUpdateProfileReducer, usersListReducer, deleteUserReducer, updateUserReducer, getUserByIdReducer} from './reducers/userReducers'\nimport { orderCreateReducer, orderDetailsReducer, updateToPaidReducer, getUserOrdersReducer, adminGetOrdersReducer, updatetoDeliveredReducer, updateToDeliveredReducer } from './reducers/ordersReducers'\n\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetail: userDetailReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay:updateToPaidReducer,\n    userOrders: getUserOrdersReducer,\n    userList: usersListReducer,\n    userDelete:deleteUserReducer,\n    getUser:getUserByIdReducer,\n    updateUser: updateUserReducer,\n    adminProductsList: adminProductListReducer,\n    updateProduct: adminUpdateProductReducer,\n    createProduct: adminCreateProductReducer,\n    deleteProduct: adminDeleteProductReducer,\n    orderList:adminGetOrdersReducer,\n    orderDeliver: updateToDeliveredReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : null\n\n\nconst initialState = {\n    cart: {cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage, paymentMethod: paymentMethodFromStorage},\n    userLogin: {userInfo: userInfoFromStorage},\n    \n}\n\nconst middleWare = [thunk]\n\nconst store = createStore (reducer, initialState, composeWithDevTools(applyMiddleware(...middleWare)))\n\nexport default store\n\n","import { PRODUCT_LIST_REQUEST,PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, ADMIN_UPDATE_PRODUCT_REQUEST, ADMIN_UPDATE_PRODUCT_SUCCESS, ADMIN_UPDATE_PRODUCT_FAIL,ADMIN_UPDATE_PRODUCT_RESET, ADMIN_CREATE_PRODUCT_REQUEST, ADMIN_CREATE_PRODUCT_SUCCESS, ADMIN_CREATE_PRODUCT_FAIL, ADMIN_DELETE_PRODUCT_REQUEST, ADMIN_DELETE_PRODUCT_SUCCESS, ADMIN_DELETE_PRODUCT_FAIL} from '../constants/productConstants'\nimport { PRODUCT_DETAILS_REQUEST,PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL} from '../constants/productConstants'\nimport { ADMIN_PRODUCT_LIST_REQUEST,ADMIN_PRODUCT_LIST_SUCCESS, ADMIN_PRODUCT_LIST_FAIL} from '../constants/productConstants'\n \n \n export const productListReducer = (state= {products: []}, action) => {\n     switch(action.type){\n         case PRODUCT_LIST_REQUEST:\n             return {loading: true, products: []}\n         case PRODUCT_LIST_SUCCESS:\n             return {loading: false, products: action.payload}\n         case PRODUCT_LIST_FAIL:\n             return {loading: false, error: action.payload}\n             default:\n                 return state\n     }\n\n }\n\n\n export const productDetailsReducer = (state= {product:  {reviews: []}}, action) => {\n    switch(action.type){\n        case PRODUCT_DETAILS_REQUEST:\n            return {loading: true, ...state}\n        case PRODUCT_DETAILS_SUCCESS:\n            return {loading: false, product: action.payload}\n        case PRODUCT_DETAILS_FAIL:\n            return {loading: false, error: action.payload}\n            default:\n                return state\n    }\n\n}\n\nexport const adminProductListReducer = (state= {products: []}, action) => {\n    switch(action.type){\n        case ADMIN_PRODUCT_LIST_REQUEST:\n            return {loading: true, products: []}\n        case ADMIN_PRODUCT_LIST_SUCCESS:\n            return {loading: false, products: action.payload}\n        case ADMIN_PRODUCT_LIST_FAIL:\n            return {loading: false, error: action.payload}\n            default:\n                return state\n    }\n\n}\n\nexport const adminUpdateProductReducer = (state= { product:{}}, action) => {\n    switch(action.type){\n        case ADMIN_UPDATE_PRODUCT_REQUEST:\n            return {loading: true}\n        case ADMIN_UPDATE_PRODUCT_SUCCESS:\n            return {loading: false, success: true}\n        case ADMIN_UPDATE_PRODUCT_FAIL:\n            return {loading: false, error: action.payload}\n        case ADMIN_UPDATE_PRODUCT_RESET:\n            return {\n                product:{}\n            }\n            default:\n                return state\n    }\n\n}\n\nexport const adminCreateProductReducer = (state= {}, action) => {\n    switch(action.type){\n        case ADMIN_CREATE_PRODUCT_REQUEST:\n            return {loading: true}\n        case ADMIN_CREATE_PRODUCT_SUCCESS:\n            return {loading: false, success: true, product: action.payload}\n        case ADMIN_CREATE_PRODUCT_FAIL:\n            return {loading: false, error: action.payload}\n        case ADMIN_UPDATE_PRODUCT_RESET:\n            return {   \n            }\n            default:\n                return state\n    }\n\n}\n\n\nexport const adminDeleteProductReducer = (state= {}, action) => {\n    switch(action.type){\n        case ADMIN_DELETE_PRODUCT_REQUEST:\n            return {loading: true}\n        case ADMIN_DELETE_PRODUCT_SUCCESS:\n            return {loading: false, success: true}\n        case ADMIN_DELETE_PRODUCT_FAIL:\n            return {loading: false, error: action.payload}\n            default:\n                return state\n    }\n\n}\n\n","import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, \n         USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, \n         USER_DETAIL_REQUEST, USER_DETAIL_SUCCESS, USER_DETAIL_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_LIST_PROFILE_FAIL, USER_LIST_PROFILE_SUCCESS, USER_LIST_PROFILE_REQUEST, USER_LIST_PROFILE_RESET, USER_REMOVE_PROFILE_REQUEST, USER_REMOVE_PROFILE_SUCCESS, USER_REMOVE_PROFILE_FAIL, USER_GET_PROFILE_FAIL, USER_GET_PROFILE_SUCCESS, USER_GET_PROFILE_REQUEST, UPDATE_USER_PROFILE_FAIL, UPDATE_USER_PROFILE_SUCCESS, UPDATE_USER_PROFILE_REQUEST, UPDATE_USER_PROFILE_RESET} from \"../constants/userConstants\"\n\n\n\nexport const userLoginReducer = (state= {}, action) => {\n    switch(action.type){\n        case USER_LOGIN_REQUEST:\n            return {loading: true}\n        case USER_LOGIN_SUCCESS:\n            return {loading: false, userInfo: action.payload}\n        case USER_LOGIN_FAIL:\n            return {loading: false, error: action.payload}\n        case USER_LOGOUT:\n            return {}\n            default:\n                return state\n    }\n\n}\n\nexport const userRegisterReducer = (state= {}, action) => {\n    switch(action.type){\n        case USER_REGISTER_REQUEST:\n            return {loading: true}\n        case USER_REGISTER_SUCCESS:\n            return {loading: false, userInfo: action.payload}\n        case USER_REGISTER_FAIL:\n            return {loading: false, error: action.payload}\n            default:\n                return state\n    }\n\n}\n\nexport const userDetailReducer = (state= { user: {} }, action) => {\n    switch(action.type){\n        case USER_DETAIL_REQUEST:\n            return {...state, loading: true}\n        case USER_DETAIL_SUCCESS:\n            return {loading: false, user: action.payload}\n        case USER_DETAIL_FAIL:\n            return {loading: false, error: action.payload}\n            default:\n                return state\n    }\n\n}\n\nexport const userUpdateProfileReducer = (state= { }, action) => {\n    switch(action.type){\n        case USER_UPDATE_PROFILE_REQUEST:\n            return {loading: true}\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return {loading: false, success: true, userInfo: action.payload}\n        case USER_UPDATE_PROFILE_FAIL:\n            return {loading: false, error: action.payload}\n            default:\n                return state\n    }\n\n}\n\nexport const usersListReducer = (state= {users: []}, action) => {\n    switch(action.type){\n        case USER_LIST_PROFILE_REQUEST:\n            return {loading: true}\n        case USER_LIST_PROFILE_SUCCESS:\n            return {loading: false, users: action.payload}\n        case USER_LIST_PROFILE_FAIL:\n            return {loading: false, error: action.payload}\n        case USER_LIST_PROFILE_RESET:\n            return { users: []}\n            default:\n                return state\n    }\n\n}\n\nexport const deleteUserReducer = (state= {}, action) => {\n    switch(action.type){\n        case USER_REMOVE_PROFILE_REQUEST:\n            return {loading: true}\n        case USER_REMOVE_PROFILE_SUCCESS:\n            return {loading: false, success: true}\n        case USER_REMOVE_PROFILE_FAIL:\n            return {loading: false, error: action.payload}\n            default:\n                return state\n    }\n\n}\n\nexport const getUserByIdReducer = (state= {}, action) => {\n    switch(action.type){\n        case USER_GET_PROFILE_REQUEST:\n            return {loading: true}\n        case USER_GET_PROFILE_SUCCESS:\n            return {loading: false, user: action.payload}\n        case USER_GET_PROFILE_FAIL:\n            return {loading: false, error: action.payload}\n            default:\n                return state\n    }\n\n}\n\nexport const updateUserReducer = (state= { user:{}}, action) => {\n    switch(action.type){\n        case UPDATE_USER_PROFILE_REQUEST:\n            return {loading: true}\n        case UPDATE_USER_PROFILE_SUCCESS:\n            return {loading: false, success: true}\n        case UPDATE_USER_PROFILE_FAIL:\n            return {loading: false, error: action.payload}\n        case UPDATE_USER_PROFILE_RESET:\n            return{\n                user:{}\n            }\n            default:\n                return state\n    }\n\n}","import {ORDER_CREATE_REQUEST,ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, \n    ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAY_RESET, ORDERS_GET_REQUEST, ORDERS_GET_SUCCESS, ORDERS_GET_FAIL, ADMIN_ORDERS_GET_REQUEST, ADMIN_ORDERS_GET_SUCCESS, ADMIN_ORDERS_GET_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_RESET} from '../constants/orderConstants'\n \n \n \n export const orderCreateReducer = (state= {}, action) => {\n     switch(action.type){\n         case ORDER_CREATE_REQUEST:\n             return {loading: true}\n         case ORDER_CREATE_SUCCESS:\n             return {loading: false, success: true, order: action.payload}\n         case ORDER_CREATE_FAIL:\n             return {loading: false, error: action.payload}\n             default:\n                 return state\n     }\n\n }\n\n \n export const orderDetailsReducer = (state= { loading: true, orderItems: [], shippingAddress: {} }, action) => {\n    switch(action.type){\n        case ORDER_DETAILS_REQUEST:\n            return {...state, loading: true}\n        case ORDER_DETAILS_SUCCESS:\n            return {loading: false,  order: action.payload}\n        case ORDER_DETAILS_FAIL:\n            return {loading: false, error: action.payload}\n            default:\n                return state\n    }\n\n}\n\nexport const updateToPaidReducer = (state= { }, action) => {\n    switch(action.type){\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDER_PAY_SUCCESS:\n            return {loading: false,  success:true}\n        case ORDER_PAY_FAIL:\n            return {loading: false, error: action.payload}\n        case ORDER_PAY_RESET:\n                return {}\n            default:\n                return state\n    }\n\n}\n\nexport const updateToDeliveredReducer = (state = {}, action) => {\n    switch (action.type) {\n      case ORDER_DELIVER_REQUEST:\n        return {\n          loading: true,\n        }\n      case ORDER_DELIVER_SUCCESS:\n        return {\n          loading: false,\n          success: true,\n        }\n      case ORDER_DELIVER_FAIL:\n        return {\n          loading: false,\n          error: action.payload,\n        }\n      case ORDER_DELIVER_RESET:\n        return {}\n      default:\n        return state\n    }\n  }\n\n\nexport const getUserOrdersReducer = (state= { orders:[] }, action) => {\n    switch(action.type){\n        case ORDERS_GET_REQUEST:\n            return {\n                loading: true\n            }\n        case ORDERS_GET_SUCCESS:\n            return {loading: false,  orders: action.payload}\n            \n        case ORDERS_GET_FAIL:\n            return {loading: false, error: action.payload}\n       \n            default:\n                return state\n    }\n\n}\n\n\nexport const adminGetOrdersReducer = (state= { orders:[] }, action) => {\n    switch(action.type){\n        case ADMIN_ORDERS_GET_REQUEST:\n            return {\n                loading: true\n            }\n        case ADMIN_ORDERS_GET_SUCCESS:\n            return {loading: false,  orders: action.payload}\n            \n        case ADMIN_ORDERS_GET_FAIL:\n            return {loading: false, error: action.payload}\n       \n            default:\n                return state\n    }\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}